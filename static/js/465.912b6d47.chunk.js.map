{"version":3,"file":"static/js/465.912b6d47.chunk.js","mappings":"4QAuxFO,IAMMA,EAAe,WAAH,IAAIC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAAQG,EAAKH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,6BAA8BI,EAAMJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SAAQ,OAClGK,EAAAA,cAAA,OAAKC,UAAU,0BAA0BC,MAAO,CAAEC,SAAUT,EAAMU,WAAYL,EAAQD,MAAOA,EAAOO,eAAeC,EAAAA,GAAW,YAC7HN,EAAAA,cAAA,OAAKE,MAAO,CAAEK,YAAa,QAAS,OAAIP,EAAAA,cAAA,QAAME,MAAO,CAAEJ,MAAO,SAAUM,WAAYL,IAAU,QAAW,QAAUC,EAAAA,cAAA,OAAKE,MAAO,CAAEC,SAAU,OAAQC,WAAYL,EAAQS,cAAeF,EAAAA,GAAW,MAAQ,SAAW,aAC/M,EASMG,EAAW,iBACXC,EAAY,8BAiKSC,KAAKC,SAASC,SAAS,IAAM,UAAUC,UAAU,EAAE,E","sources":["appFiles/shared/utility.js"],"sourcesContent":["import React, { ElementConfig, useEffect, useRef, useState } from 'react';\nimport { isEmail } from 'validator';\nimport './utility.scss';\nexport { useMountedState } from 'react-use';\nimport { v4 as uuidV4 } from 'uuid';\nimport { validate as isValidUUID } from 'uuid';\n\nexport const isValidUID = id => isValidUUID(id);\n\nexport const uncachedUrl = urlString => `${urlString}?time=${new Date()}`;\nexport const generateNewUUID = () => uuidV4();\nimport * as R from 'ramda';\n\nexport const isFocusable = (element: HTMLElement): boolean => element?.tabindex != -1 || element?.getAttribute('tabindex') != null;\nexport const updateObject = (oldObject, updatedProperties) => {\n\treturn {\n\t\t...oldObject,\n\t\t...updatedProperties,\n\t};\n};\n\nexport const checkValidity = (value, rules) => {\n\tlet isValid = true;\n\tif (!rules) {\n\t\treturn true;\n\t}\n\n\tif (rules.required) {\n\t\tisValid = value.trim() !== '' && isValid;\n\t}\n\n\tif (rules.minLength) {\n\t\tisValid = value.length >= rules.minLength && isValid;\n\t}\n\n\tif (rules.maxLength) {\n\t\tisValid = value.length <= rules.maxLength && isValid;\n\t}\n\n\tif (rules.isEmail) {\n\t\tconst pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\t\tisValid = pattern.test(value) && isValid;\n\t}\n\n\tif (rules.isNumeric) {\n\t\tconst pattern = /^\\d+$/;\n\t\tisValid = pattern.test(value) && isValid;\n\t}\n\n\treturn isValid;\n};\n\nexport const defaultSelectStyles = {\n\tcontainer: (provided, _state) => ({ ...provided, width: '100%' }),\n\tcontrol: (provided, _state) => ({\n\t\t...provided,\n\t\tboxShadow: 'none',\n\t\tposition: 'relative',\n\t\tflex: '1 1 100%',\n\t\tminWidth: '250px',\n\t\tmaxWidth: '100%',\n\t\twidth: '100%',\n\t\tfontFamily: 'var(--app-text-main-font)',\n\t\tfontSize: '18px',\n\t\tlineHeight: '20px',\n\t\tcolor: 'var(--app-color-gray-light)',\n\t\tborder: 'none',\n\t\toutline: 'none',\n\t\ttextAlign: 'left',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'stretch',\n\t\talignContent: 'center',\n\t\talignSelf: 'stretch',\n\t\tmargin: '0px 0 0 0 ',\n\t\tpadding: '0 0px 0 10px',\n\t}),\n\tinput: (provided, _state) => ({\n\t\t...provided,\n\t\tmargin: '0px 0 0px 0px ',\n\t\tfontFamily: 'var(--app-text-main-font)',\n\t\tfontSize: '20px',\n\t\tlineHeight: '20px',\n\t\tcolor: 'var(--app-color-gray-dark)',\n\t\tborder: 'none',\n\t\toutline: 'none',\n\t\talignSelf: 'center',\n\t\tpadding: '0',\n\t\twidth: '100%',\n\t\ttextAlign: 'left',\n\t}),\n\tmenu: (provided, { _data, _isDisabled, _isFocused, isSelected }) => ({\n\t\t...provided,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tverticalTextAlign: 'center',\n\t\talignContent: 'center',\n\t\tcolor: isSelected ? 'var(--app-color-gray-light)' : '#4A4A4A',\n\t}),\n\tmenulist: (provided, { _data, _isDisabled, _isFocused, _isSelected }) => ({\n\t\t...provided,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tverticalTextAlign: 'center',\n\t\talignContent: 'center',\n\t\tbackgroundColor: 'transparent',\n\t}),\n\toption: (provided, { _data, _isDisabled, isFocused, isSelected }) => ({\n\t\t...provided,\n\t\tminHeight: '20px',\n\t\tpaddingTop: '10px',\n\t\tfontSize: '18px',\n\t\tverticalTextAlign: 'center',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\talignContent: 'center',\n\t\tcolor: isSelected ? '#4A4A4A' : isFocused ? 'white' : 'var(--app-color-gray-light)',\n\t\tbackgroundColor: isSelected ? '#D2D2D2' : isFocused ? '#4A4A4A' : 'transparent',\n\t\t//borderRadius: '8px',\n\t}),\n\tplaceholder: (provided, _state) => ({ ...provided, fontSize: '18px', lineHeight: '20px', color: 'var(--app-color-gray-light)', fontWeight: 400, overflow: 'hidden' }),\n\tsingleValue: (provided, state) => {\n\t\tconst opacity = state.isDisabled ? 0.5 : 1;\n\t\tconst transition = 'opacity 300ms';\n\t\treturn { ...provided, opacity, transition, marginLeft: '0px', fontSize: '18px', lineHeight: '20px', color: '#4A4A4A' };\n\t},\n\tdropdownIndicator: (styles, { _data }) => ({ ...styles, color: 'var(--app-color-gray-light)', size: 6, ':hover': { color: 'gray' }, width: '45px' }),\n\tindicatorsContainer: (styles, { _data }) => ({ ...styles, color: 'var(--app-color-gray-light)', size: 7, display: 'flex', justifyContent: 'flex-end', alignItems: 'center', alignSelf: 'flex-end', ':hover': { color: 'gray' }, width: '65px' }),\n};\n\nexport const CustomOption = ({ innerProps, isDisabled, label }) =>\n\t!isDisabled ? (\n\t\t<div {...innerProps} style={{ cursor: 'pointer', display: 'flex', flexDirection: 'row', justifyContent: 'flex-start', alignItems: 'center' }}>\n\t\t\t<div style={{ width: '20px', height: '20px' }}>\n\t\t\t\t{/* <img src={roundArrow} alt=\">\" style={{ width: '20px', height: '20px' }} /> */}\n\t\t\t</div>\n\t\t\t<div style={{ margin: '0 0 0 10px', flex: 1 }}>\n\t\t\t\t<p>{label}</p>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\nexport const CustomOptionHighlight = ({ provided, isSelected, isFocused, innerProps, isDisabled, label }) =>\n\t!isDisabled ? (\n\t\t<div\n\t\t\t{...innerProps}\n\t\t\tstyle={{\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexDirection: 'row',\n\t\t\t\t...provided,\n\t\t\t\tminHeight: '10px',\n\t\t\t\tverticalTextAlign: 'center',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignItems: 'center',\n\t\t\t\talignContent: 'center',\n\t\t\t\tcolor: isSelected ? '#4A4A4A' : isFocused ? 'white' : 'var(--app-color-gray-light)',\n\t\t\t\tbackgroundColor: isSelected ? '#D2D2D2' : isFocused ? '#4A4A4A' : 'transparent',\n\t\t\t\tborderRadius: '8px',\n\t\t\t}}\n\t\t>\n\t\t\t<div style={{ width: '20px', height: '20px' }}>\n\t\t\t\t{/* <img src={roundArrow} alt=\">\" style={{ width: '20px', height: '20px' }} /> */}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tmargin: '0 0 0 10px',\n\t\t\t\t\tflex: 1,\n\t\t\t\t\t...provided,\n\t\t\t\t\tfontSize: '1em',\n\t\t\t\t\tverticalTextAlign: 'center',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\talignContent: 'center',\n\t\t\t\t\tcolor: isSelected ? '#4A4A4A' : isFocused ? 'white' : 'var(--app-color-gray-light)',\n\t\t\t\t\tbackgroundColor: isSelected ? '#D2D2D2' : isFocused ? '#4A4A4A' : 'transparent',\n\t\t\t\t\tborderRadius: '8px',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<p style={{ padding: '5px', margin: '5px' }}>{label}</p>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\nexport const useStateRef = (initialValue: any): Array<any> => {\n\tconst [value, setValue] = useState(initialValue);\n\tconst ref = useRef(value);\n\tuseEffect(() => {\n\t\tref.current = value;\n\t}, [value]);\n\treturn [value, setValue, ref];\n};\n\nexport const required = value => {\n\tif (!value) {\n\t\treturn (\n\t\t\t<p style={{ fontFamily: 'var(--app-text-main-font)', fontSize: '1rem' /* '16px' */, lineHeight: '22px', color: 'var(--app-color-error)', margin: '1px 0 2px 0', padding: '0 0 0 1px' }} role=\"alert\">\n\t\t\t\t{'This field is required!'}\n\t\t\t</p>\n\t\t);\n\t}\n};\n\nexport const verifyEmail = value => {\n\tif (!isEmail(value)) {\n\t\treturn (\n\t\t\t<p style={{ fontFamily: 'var(--app-text-main-font)', fontSize: '1rem' /* '16px' */, lineHeight: '22px', color: 'var(--app-color-error)', margin: '1px 0 2px 0', padding: '0 0 0 1px' }} role=\"alert\">\n\t\t\t\t{'Please enter a valid email adress!'}\n\t\t\t</p>\n\t\t);\n\t}\n};\n\nexport const neutralizeBack = callback => {\n\twindow.navigateState(null, '', window.location.href);\n\twindow.onpopstate = () => {\n\t\twindow.navigateState(null, '', window.location.href);\n\t\tcallback();\n\t};\n};\nexport const revivalBack = () => {\n\twindow.onpopstate = undefined;\n\twindow.history.back();\n};\n\nexport const numberOfEmployees = [\n\t{ value: '1-10', label: '1-10 employees', id: 0 },\n\t{ value: '11-50', label: '11-50 employees', id: 1 },\n\t{ value: '51-200', label: '51-200 employees', id: 2 },\n\t{ value: '201-500', label: '201-500 employees', id: 3 },\n\t{ value: '501+', label: '501+ employees', id: 3 },\n];\nexport const positions = [\n\t{ value: 'front-end-developer', label: 'Front End Developer', id: 0 },\n\t{ value: 'back-end-developer', label: 'Back End Developer', id: 1 },\n\t{ value: 'ui-ux-designer', label: 'UI/UX Designer', id: 2 },\n\t{ value: 'project-manager', label: 'Project Manager', id: 3 },\n];\n\nexport const colleagues = [\n\t{ name: 'Moga B.', position: 'Frontend Developer', id: '0' },\n\t{ name: 'Daniel IP.', position: 'Frontend Developer', id: '1' },\n\t{ name: 'Daniel R.', position: 'Backend Developer', id: '2' },\n\t{ name: 'Ugur K.', position: 'Dev Ops', id: '3' },\n\t{ name: 'Daniel D.', position: '', id: '4' },\n\t{ name: 'Bogdan G.', position: 'Project Manager', id: '5' },\n\t{ name: 'Andreea T.', position: 'QA Tester', id: '6' },\n\t{ name: 'Grant', position: '', id: '7' },\n];\n\nexport const sortColleaguesValues = [];\nexport const sortByValues = [{ value: 'Sort by: A-Z', label: 'Sort by: A-Z', id: 0 }];\n\nexport const displayColleaguesTypes = [\n\t{ value: 'block', label: 'Display: block', id: 0 },\n\t{ value: 'inline', label: 'Display: inline', id: 1 },\n\t{ value: 'table', label: 'Display: table', id: 2 },\n];\n\nexport const numberElementOptions = [\n\t{\n\t\tvalue: 'value',\n\t\tlabel: (\n\t\t\t<div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', height: '20px' }}>\n\t\t\t\t<p style={{ fontFamily: ' var(--app-text-main-font)', fontSize: '1.5rem', color: 'var(--app-color-gray-light)', paddingRight: '10px' }}>123</p>\n\t\t\t\t<p style={{ fontFamily: ' var(--app-text-main-font)', fontSize: '1rem', color: '#4A4A4A', paddingLeft: '10px' }}>Value</p>\n\t\t\t</div>\n\t\t),\n\t},\n\t{\n\t\tvalue: 'phone-number',\n\t\tlabel: (\n\t\t\t<div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', height: '20px' }}>\n\t\t\t\t<p style={{ fontFamily: ' var(--app-text-main-font)', fontSize: '1.5rem', color: 'var(--app-color-gray-light)', paddingRight: '10px' }}>+0</p>\n\t\t\t\t<p style={{ fontFamily: ' var(--app-text-main-font)', fontSize: '1rem', color: '#4A4A4A', paddingLeft: '10px' }}>Phone Number</p>\n\t\t\t</div>\n\t\t),\n\t},\n\t{\n\t\tvalue: 'currency',\n\t\tlabel: (\n\t\t\t<div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', height: '20px' }}>\n\t\t\t\t<p style={{ fontFamily: ' var(--app-text-main-font)', fontSize: '1.5rem', color: 'var(--app-color-gray-light)', paddingRight: '10px' }}>$€</p>\n\t\t\t\t<p style={{ fontFamily: ' var(--app-text-main-font)', fontSize: '1rem', color: '#4A4A4A', paddingLeft: '10px' }}>Currency</p>\n\t\t\t</div>\n\t\t),\n\t},\n\t{\n\t\tvalue: 'percentage',\n\t\tlabel: (\n\t\t\t<div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', height: '20px' }}>\n\t\t\t\t<p style={{ fontFamily: ' var(--app-text-main-font)', fontSize: '1.5rem', color: 'var(--app-color-gray-light)', paddingRight: '10px' }}>%</p>\n\t\t\t\t<p style={{ fontFamily: ' var(--app-text-main-font)', fontSize: '1rem', color: '#4A4A4A', paddingLeft: '15px' }}>Percentage</p>\n\t\t\t</div>\n\t\t),\n\t},\n];\n\nexport const minSecOptions = [\n\t{ label: '1', value: '1' },\n\t{ label: '2', value: '2' },\n\t{ label: '3', value: '3' },\n\t{ label: '4', value: '4' },\n\t{ label: '5', value: '5' },\n\t{ label: '6', value: '6' },\n\t{ label: '7', value: '7' },\n\t{ label: '8', value: '8' },\n\t{ label: '9', value: '9' },\n\t{ label: '10', value: '10' },\n\t{ label: '11', value: '11' },\n\t{ label: '12', value: '12' },\n\t{ label: '13', value: '13' },\n\t{ label: '14', value: '14' },\n\t{ label: '15', value: '15' },\n\t{ label: '16', value: '16' },\n\t{ label: '17', value: '17' },\n\t{ label: '18', value: '18' },\n\t{ label: '19', value: '19' },\n\t{ label: '20', value: '20' },\n\t{ label: '21', value: '21' },\n\t{ label: '22', value: '22' },\n\t{ label: '23', value: '23' },\n\t{ label: '24', value: '24' },\n\t{ label: '25', value: '25' },\n\t{ label: '26', value: '26' },\n\t{ label: '27', value: '27' },\n\t{ label: '28', value: '28' },\n\t{ label: '29', value: '29' },\n\t{ label: '30', value: '30' },\n\t{ label: '31', value: '31' },\n\t{ label: '32', value: '32' },\n\t{ label: '33', value: '33' },\n\t{ label: '34', value: '34' },\n\t{ label: '35', value: '35' },\n\t{ label: '36', value: '36' },\n\t{ label: '37', value: '37' },\n\t{ label: '38', value: '38' },\n\t{ label: '39', value: '39' },\n\t{ label: '40', value: '40' },\n\t{ label: '41', value: '41' },\n\t{ label: '42', value: '42' },\n\t{ label: '43', value: '43' },\n\t{ label: '44', value: '44' },\n\t{ label: '45', value: '45' },\n\t{ label: '46', value: '46' },\n\t{ label: '47', value: '47' },\n\t{ label: '48', value: '48' },\n\t{ label: '49', value: '49' },\n\t{ label: '50', value: '50' },\n\t{ label: '51', value: '51' },\n\t{ label: '52', value: '52' },\n\t{ label: '53', value: '53' },\n\t{ label: '54', value: '54' },\n\t{ label: '55', value: '55' },\n\t{ label: '56', value: '56' },\n\t{ label: '57', value: '57' },\n\t{ label: '58', value: '58' },\n\t{ label: '59', value: '59' },\n\t{ label: '60', value: '60' },\n];\nexport const hoursOptions = [\n\t{ label: '1', value: '1' },\n\t{ label: '2', value: '2' },\n\t{ label: '3', value: '3' },\n\t{ label: '4', value: '4' },\n\t{ label: '5', value: '5' },\n\t{ label: '6', value: '6' },\n\t{ label: '7', value: '7' },\n\t{ label: '8', value: '8' },\n\t{ label: '9', value: '9' },\n\t{ label: '10', value: '10' },\n\t{ label: '11', value: '11' },\n\t{ label: '12', value: '12' },\n\t{ label: '13', value: '13' },\n\t{ label: '14', value: '14' },\n\t{ label: '15', value: '15' },\n\t{ label: '16', value: '16' },\n\t{ label: '17', value: '17' },\n\t{ label: '18', value: '18' },\n\t{ label: '19', value: '19' },\n\t{ label: '20', value: '20' },\n\t{ label: '21', value: '21' },\n\t{ label: '22', value: '22' },\n\t{ label: '23', value: '23' },\n\t{ label: '24', value: '24' },\n];\nexport const daysOptions = [\n\t{ label: '1', value: '1' },\n\t{ label: '2', value: '2' },\n\t{ label: '3', value: '3' },\n\t{ label: '4', value: '4' },\n\t{ label: '5', value: '5' },\n\t{ label: '6', value: '6' },\n\t{ label: '7', value: '7' },\n\t{ label: '8', value: '8' },\n\t{ label: '9', value: '9' },\n\t{ label: '10', value: '10' },\n\t{ label: '11', value: '11' },\n\t{ label: '12', value: '12' },\n\t{ label: '13', value: '13' },\n\t{ label: '14', value: '14' },\n\t{ label: '15', value: '15' },\n\t{ label: '16', value: '16' },\n\t{ label: '17', value: '17' },\n\t{ label: '18', value: '18' },\n\t{ label: '19', value: '19' },\n\t{ label: '20', value: '20' },\n\t{ label: '21', value: '21' },\n\t{ label: '22', value: '22' },\n\t{ label: '23', value: '23' },\n\t{ label: '24', value: '24' },\n\t{ label: '25', value: '25' },\n\t{ label: '26', value: '26' },\n\t{ label: '27', value: '27' },\n\t{ label: '28', value: '28' },\n\t{ label: '29', value: '29' },\n\t{ label: '30', value: '30' },\n\t{ label: '31', value: '31' },\n];\nexport const timeUnitsOptions = [\n\t{ label: 'sec', value: 1 },\n\t{ label: 'min', value: 60 },\n\t{ label: 'hours', value: 3600 },\n\t{ label: 'days', value: 86400 },\n\t/* { label: \"months\", value: \"5\" }, { label: \"years\", value: \"6\" }, */\n];\nexport const transformSecondsInNumber = seconds => {\n\tconst minutes = +seconds / 60;\n\tlet hours = 0,\n\t\tdays = 0;\n\n\tif (minutes > 60) hours = minutes / 60;\n\tif (hours > 24) days = hours / 24;\n\n\tif (days == 0 && hours > 0) return { value: hours, unit: 'hours' };\n\tif (hours == 0) return { value: minutes, unit: 'min' };\n\treturn { value: days, unit: 'days' };\n};\nexport const transformSecondsInInteger = seconds => {\n\tconst minutes = +seconds / 60;\n\tlet hours = 0,\n\t\tdays = 0;\n\n\tif (minutes > 60) hours = minutes / 60;\n\tif (hours > 24) days = hours / 24;\n\tconst isInt = n => Number(n) === n && n % 1 === 0;\n\tif (isInt(days) && days > 0) return { value: days, unit: 'days' };\n\telse if (isInt(hours) && hours > 0) return { value: hours, unit: 'hours' };\n\telse if (isInt(minutes) && minutes > 0) return { value: minutes, unit: 'min' };\n\telse if (isInt(+seconds) && +seconds > 0) return { value: seconds, unit: 'sec' };\n};\nexport function isInteger(n) {\n\treturn Number(n) === n && n % 1 === 0;\n}\nexport const transformSecondsInString = seconds => {\n\tconst minutes = +seconds / 60;\n\tlet hours = 0,\n\t\tdays = 0;\n\tif (minutes > 60) hours = minutes / 60;\n\tif (hours > 24) days = hours / 24;\n\tif (hours == 0) return minutes?.toFixed(0) + ' min';\n\tif (days == 0) return hours?.toFixed(0) + ' hours';\n\treturn days?.toFixed(2) + ' days';\n};\n\nexport function debounce(func, wait, immediate) {\n\tlet timeout;\n\treturn function executedFunction() {\n\t\tconst vm = this;\n\t\tconst args = arguments;\n\t\tconst later = function () {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(vm, args);\n\t\t};\n\t\tconst callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(vm, args);\n\t};\n}\n\nexport const currency_list = [\n\t{ label: 'Philippine Peso', value: 'PHP', symbol: '₱' },\n\t{ label: 'US Dollar', value: 'USD', symbol: '$' },\n\t{ label: 'Afghan Afghani', value: 'AFA', symbol: '؋' },\n\t{ label: 'Albanian Lek', value: 'ALL', symbol: 'Lek' },\n\t{ label: 'Algerian Dinar', value: 'DZD', symbol: 'دج' },\n\t{ label: 'Angolan Kwanza', value: 'AOA', symbol: 'Kz' },\n\t{ label: 'Argentine Peso', value: 'ARS', symbol: '$' },\n\t{ label: 'Armenian Dram', value: 'AMD', symbol: '֏' },\n\t{ label: 'Aruban Florin', value: 'AWG', symbol: 'ƒ' },\n\t{ label: 'Australian Dollar', value: 'AUD', symbol: '$' },\n\t{ label: 'Azerbaijani Manat', value: 'AZN', symbol: 'm' },\n\t{ label: 'Bahamian Dollar', value: 'BSD', symbol: 'B$' },\n\t{ label: 'Bahraini Dinar', value: 'BHD', symbol: '.د.ب' },\n\t{ label: 'Bangladeshi Taka', value: 'BDT', symbol: '৳' },\n\t{ label: 'Barbadian Dollar', value: 'BBD', symbol: 'Bds$' },\n\t{ label: 'Belarusian Ruble', value: 'BYR', symbol: 'Br' },\n\t{ label: 'Belgian Franc', value: 'BEF', symbol: 'fr' },\n\t{ label: 'Belize Dollar', value: 'BZD', symbol: '$' },\n\t{ label: 'Bermudan Dollar', value: 'BMD', symbol: '$' },\n\t{ label: 'Bhutanese Ngultrum', value: 'BTN', symbol: 'Nu.' },\n\t{ label: 'Bitcoin', value: 'BTC', symbol: '฿' },\n\t{ label: 'Bolivian Boliviano', value: 'BOB', symbol: 'Bs.' },\n\t{ label: 'Bosnia-Herzegovina Convertible Mark', value: 'BAM', symbol: 'KM' },\n\t{ label: 'Botswanan Pula', value: 'BWP', symbol: 'P' },\n\t{ label: 'Brazilian Real', value: 'BRL', symbol: 'R$' },\n\t{ label: 'British Pound Sterling', value: 'GBP', symbol: '£' },\n\t{ label: 'Brunei Dollar', value: 'BND', symbol: 'B$' },\n\t{ label: 'Bulgarian Lev', value: 'BGN', symbol: 'Лв.' },\n\t{ label: 'Burundian Franc', value: 'BIF', symbol: 'FBu' },\n\t{ label: 'Cambodian Riel', value: 'KHR', symbol: 'KHR' },\n\t{ label: 'Canadian Dollar', value: 'CAD', symbol: '$' },\n\t{ label: 'Cape Verdean Escudo', value: 'CVE', symbol: '$' },\n\t{ label: 'Cayman Islands Dollar', value: 'KYD', symbol: '$' },\n\t{ label: 'CFA Franc BCEAO', value: 'XOF', symbol: 'CFA' },\n\t{ label: 'CFA Franc BEAC', value: 'XAF', symbol: 'FCFA' },\n\t{ label: 'CFP Franc', value: 'XPF', symbol: '₣' },\n\t{ label: 'Chilean Peso', value: 'CLP', symbol: '$' },\n\t{ label: 'Chinese Yuan', value: 'CNY', symbol: '¥' },\n\t{ label: 'Colombian Peso', value: 'COP', symbol: '$' },\n\t{ label: 'Comorian Franc', value: 'KMF', symbol: 'CF' },\n\t{ label: 'Congolese Franc', value: 'CDF', symbol: 'FC' },\n\t{ label: 'Costa Rican ColÃ³n', value: 'CRC', symbol: '₡' },\n\t{ label: 'Croatian Kuna', value: 'HRK', symbol: 'kn' },\n\t{ label: 'Cuban Convertible Peso', value: 'CUC', symbol: '$, CUC' },\n\t{ label: 'Czech Republic Koruna', value: 'CZK', symbol: 'Kč' },\n\t{ label: 'Danish Krone', value: 'DKK', symbol: 'Kr.' },\n\t{ label: 'Djiboutian Franc', value: 'DJF', symbol: 'Fdj' },\n\t{ label: 'Dominican Peso', value: 'DOP', symbol: '$' },\n\t{ label: 'East Caribbean Dollar', value: 'XCD', symbol: '$' },\n\t{ label: 'Egyptian Pound', value: 'EGP', symbol: 'ج.م' },\n\t{ label: 'Eritrean Nakfa', value: 'ERN', symbol: 'Nfk' },\n\t{ label: 'Estonian Kroon', value: 'EEK', symbol: 'kr' },\n\t{ label: 'Ethiopian Birr', value: 'ETB', symbol: 'Nkf' },\n\t{ label: 'Euro', value: 'EUR', symbol: '€' },\n\t{ label: 'Falkland Islands Pound', value: 'FKP', symbol: '£' },\n\t{ label: 'Fijian Dollar', value: 'FJD', symbol: 'FJ$' },\n\t{ label: 'Gambian Dalasi', value: 'GMD', symbol: 'D' },\n\t{ label: 'Georgian Lari', value: 'GEL', symbol: 'ლ' },\n\t{ label: 'German Mark', value: 'DEM', symbol: 'DM' },\n\t{ label: 'Ghanaian Cedi', value: 'GHS', symbol: 'GH₵' },\n\t{ label: 'Gibraltar Pound', value: 'GIP', symbol: '£' },\n\t{ label: 'Greek Drachma', value: 'GRD', symbol: '₯, Δρχ, Δρ' },\n\t{ label: 'Guatemalan Quetzal', value: 'GTQ', symbol: 'Q' },\n\t{ label: 'Guinean Franc', value: 'GNF', symbol: 'FG' },\n\t{ label: 'Guyanaese Dollar', value: 'GYD', symbol: '$' },\n\t{ label: 'Haitian Gourde', value: 'HTG', symbol: 'G' },\n\t{ label: 'Honduran Lempira', value: 'HNL', symbol: 'L' },\n\t{ label: 'Hong Kong Dollar', value: 'HKD', symbol: '$' },\n\t{ label: 'Hungarian Forint', value: 'HUF', symbol: 'Ft' },\n\t{ label: 'Icelandic KrÃ³na', value: 'ISK', symbol: 'kr' },\n\t{ label: 'Indian Rupee', value: 'INR', symbol: '₹' },\n\t{ label: 'Indonesian Rupiah', value: 'IDR', symbol: 'Rp' },\n\t{ label: 'Iranian Rial', value: 'IRR', symbol: '﷼' },\n\t{ label: 'Iraqi Dinar', value: 'IQD', symbol: 'د.ع' },\n\t{ label: 'Israeli New Sheqel', value: 'ILS', symbol: '₪' },\n\t{ label: 'Italian Lira', value: 'ITL', symbol: 'L,£' },\n\t{ label: 'Jamaican Dollar', value: 'JMD', symbol: 'J$' },\n\t{ label: 'Japanese Yen', value: 'JPY', symbol: '¥' },\n\t{ label: 'Jordanian Dinar', value: 'JOD', symbol: 'ا.د' },\n\t{ label: 'Kazakhstani Tenge', value: 'KZT', symbol: 'лв' },\n\t{ label: 'Kenyan Shilling', value: 'KES', symbol: 'KSh' },\n\t{ label: 'Kuwaiti Dinar', value: 'KWD', symbol: 'ك.د' },\n\t{ label: 'Kyrgystani Som', value: 'KGS', symbol: 'лв' },\n\t{ label: 'Laotian Kip', value: 'LAK', symbol: '₭' },\n\t{ label: 'Latvian Lats', value: 'LVL', symbol: 'Ls' },\n\t{ label: 'Lebanese Pound', value: 'LBP', symbol: '£' },\n\t{ label: 'Lesotho Loti', value: 'LSL', symbol: 'L' },\n\t{ label: 'Liberian Dollar', value: 'LRD', symbol: '$' },\n\t{ label: 'Libyan Dinar', value: 'LYD', symbol: 'د.ل' },\n\t{ label: 'Lithuanian Litas', value: 'LTL', symbol: 'Lt' },\n\t{ label: 'Macanese Pataca', value: 'MOP', symbol: '$' },\n\t{ label: 'Macedonian Denar', value: 'MKD', symbol: 'ден' },\n\t{ label: 'Malagasy Ariary', value: 'MGA', symbol: 'Ar' },\n\t{ label: 'Malawian Kwacha', value: 'MWK', symbol: 'MK' },\n\t{ label: 'Malaysian Ringgit', value: 'MYR', symbol: 'RM' },\n\t{ label: 'Maldivian Rufiyaa', value: 'MVR', symbol: 'Rf' },\n\t{ label: 'Mauritanian Ouguiya', value: 'MRO', symbol: 'MRU' },\n\t{ label: 'Mauritian Rupee', value: 'MUR', symbol: '₨' },\n\t{ label: 'Mexican Peso', value: 'MXN', symbol: '$' },\n\t{ label: 'Moldovan Leu', value: 'MDL', symbol: 'L' },\n\t{ label: 'Mongolian Tugrik', value: 'MNT', symbol: '₮' },\n\t{ label: 'Moroccan Dirham', value: 'MAD', symbol: 'MAD' },\n\t{ label: 'Mozambican Metical', value: 'MZM', symbol: 'MT' },\n\t{ label: 'Myanmar Kyat', value: 'MMK', symbol: 'K' },\n\t{ label: 'Namibian Dollar', value: 'NAD', symbol: '$' },\n\t{ label: 'Nepalese Rupee', value: 'NPR', symbol: '₨' },\n\t{ label: 'Netherlands Antillean Guilder', value: 'ANG', symbol: 'ƒ' },\n\t{ label: 'New Taiwan Dollar', value: 'TWD', symbol: '$' },\n\t{ label: 'New Zealand Dollar', value: 'NZD', symbol: '$' },\n\t{ label: 'Nicaraguan CÃ³rdoba', value: 'NIO', symbol: 'C$' },\n\t{ label: 'Nigerian Naira', value: 'NGN', symbol: '₦' },\n\t{ label: 'North Korean Won', value: 'KPW', symbol: '₩' },\n\t{ label: 'Norwegian Krone', value: 'NOK', symbol: 'kr' },\n\t{ label: 'Omani Rial', value: 'OMR', symbol: '.ع.ر' },\n\t{ label: 'Pakistani Rupee', value: 'PKR', symbol: '₨' },\n\t{ label: 'Panamanian Balboa', value: 'PAB', symbol: 'B/.' },\n\t{ label: 'Papua New Guinean Kina', value: 'PGK', symbol: 'K' },\n\t{ label: 'Paraguayan Guarani', value: 'PYG', symbol: '₲' },\n\t{ label: 'Peruvian Nuevo Sol', value: 'PEN', symbol: 'S/.' },\n\t{ label: 'Polish Zloty', value: 'PLN', symbol: 'zł' },\n\t{ label: 'Qatari Rial', value: 'QAR', symbol: 'ق.ر' },\n\t{ label: 'Romanian Leu', value: 'RON', symbol: 'RON' },\n\t{ label: 'Russian Ruble', value: 'RUB', symbol: '₽' },\n\t{ label: 'Rwandan Franc', value: 'RWF', symbol: 'FRw' },\n\t{ label: 'Salvadoran Colón', value: 'SVC', symbol: '₡' },\n\t{ label: 'Samoan Tala', value: 'WST', symbol: 'SAT' },\n\t{ label: 'Saudi Riyal', value: 'SAR', symbol: '﷼' },\n\t{ label: 'Serbian Dinar', value: 'RSD', symbol: 'din' },\n\t{ label: 'Seychellois Rupee', value: 'SCR', symbol: 'SRe' },\n\t{ label: 'Sierra Leonean Leone', value: 'SLL', symbol: 'Le' },\n\t{ label: 'Singapore Dollar', value: 'SGD', symbol: '$' },\n\t{ label: 'Slovak Koruna', value: 'SKK', symbol: 'Sk' },\n\t{ label: 'Solomon Islands Dollar', value: 'SBD', symbol: 'Si$' },\n\t{ label: 'Somali Shilling', value: 'SOS', symbol: 'Sh.so.' },\n\t{ label: 'South African Rand', value: 'ZAR', symbol: 'R' },\n\t{ label: 'South Korean Won', value: 'KRW', symbol: '₩' },\n\t{ label: 'Special Drawing Rights', value: 'XDR', symbol: 'SDR' },\n\t{ label: 'Sri Lankan Rupee', value: 'LKR', symbol: 'Rs' },\n\t{ label: 'St. Helena Pound', value: 'SHP', symbol: '£' },\n\t{ label: 'Sudanese Pound', value: 'SDG', symbol: '.س.ج' },\n\t{ label: 'Surivaluese Dollar', value: 'SRD', symbol: '$' },\n\t{ label: 'Swazi Lilangeni', value: 'SZL', symbol: 'E' },\n\t{ label: 'Swedish Krona', value: 'SEK', symbol: 'kr' },\n\t{ label: 'Swiss Franc', value: 'CHF', symbol: 'CHf' },\n\t{ label: 'Syrian Pound', value: 'SYP', symbol: 'LS' },\n\t{ label: 'São Tomé and Príncipe Dobra', value: 'STD', symbol: 'Db' },\n\t{ label: 'Tajikistani Somoni', value: 'TJS', symbol: 'SM' },\n\t{ label: 'Tanzanian Shilling', value: 'TZS', symbol: 'TSh' },\n\t{ label: 'Thai Baht', value: 'THB', symbol: '฿' },\n\t{ label: \"Tongan Pa'anga\", value: 'TOP', symbol: '$' },\n\t{ label: 'Trinidad & Tobago Dollar', value: 'TTD', symbol: '$' },\n\t{ label: 'Tunisian Dinar', value: 'TND', symbol: 'ت.د' },\n\t{ label: 'Turkish Lira', value: 'TRY', symbol: '₺' },\n\t{ label: 'Turkmenistani Manat', value: 'TMT', symbol: 'T' },\n\t{ label: 'Ugandan Shilling', value: 'UGX', symbol: 'USh' },\n\t{ label: 'Ukrainian Hryvnia', value: 'UAH', symbol: '₴' },\n\t{ label: 'United Arab Emirates Dirham', value: 'AED', symbol: 'إ.د' },\n\t{ label: 'Uruguayan Peso', value: 'UYU', symbol: '$' },\n\t{ label: 'Uzbekistan Som', value: 'UZS', symbol: 'лв' },\n\t{ label: 'Vanuatu Vatu', value: 'VUV', symbol: 'VT' },\n\t{ label: 'Venezuelan BolÃvar', value: 'VEF', symbol: 'Bs' },\n\t{ label: 'Vietnamese Dong', value: 'VND', symbol: '₫' },\n\t{ label: 'Yemeni Rial', value: 'YER', symbol: '﷼' },\n\t{ label: 'Zambian Kwacha', value: 'ZMK', symbol: 'ZK' },\n];\nexport const fileExtensions = [\n\t{ label: 'Adobe Acrobat Reader (.pdf)', value: '.pdf' },\n\t{ label: 'Microsoft Word (.doc)', value: '.doc' },\n\t{ label: 'Microsoft Word (.docx)', value: '.docx' },\n\t{ label: 'Microsoft Excel (.xls)', value: '.xls' },\n\t{ label: 'Microsoft Excel (.xlsx)', value: '.xlsx' },\n\t{ label: 'Microsoft Power Point file (.ppt)', value: '.ppt' },\n\t{ label: 'Microsoft Power Point file (.pptx)', value: '.pptx' },\n\t{ label: 'Image file (.jpg)', value: '.jpg' },\n\t{ label: 'Image file (.jpeg)', value: '.jpeg' },\n\t{ label: 'Image file (.png)', value: '.pbg' },\n\t{ label: 'JSON file (.json)', value: '.json' },\n];\n\nexport const timezones1 = [\n\t{ value: '(GMT-11:00) Pago Pago', label: 'Pacific/Pago_Pago' },\n\t{ value: '(GMT-10:00) Hawaii Time', label: 'Pacific/Honolulu' },\n\t{ value: '(GMT-08:00) Pacific Time', label: 'America/Los_Angeles' },\n\t{ value: '(GMT-08:00) Pacific Time - Tijuana', label: 'America/Tijuana' },\n\t{ value: '(GMT-07:00) Mountain Time', label: 'America/Denver' },\n\t{ value: '(GMT-07:00) Mountain Time - Arizona', label: 'America/Phoenix' },\n\t{ value: '(GMT-07:00) Mountain Time - Chihuahua}, Mazatlan', label: 'America/Mazatlan' },\n\t{ value: '(GMT-06:00) Central Time', label: 'America/Chicago' },\n\t{ value: '(GMT-06:00) Central Time - Mexico City', label: 'America/Mexico_City' },\n\t{ value: '(GMT-06:00) Central Time - Regina', label: 'America/Regina' },\n\t{ value: '(GMT-06:00) Guatemala', label: 'America/Guatemala' },\n\t{ value: '(GMT-05:00) Bogota', label: 'America/Bogota' },\n\t{ value: '(GMT-05:00) Eastern Time', label: 'America/New_York' },\n\t{ value: '(GMT-05:00) Lima', label: 'America/Lima' },\n\t{ value: '(GMT-04:30) Caracas', label: 'America/Caracas' },\n\t{ value: '(GMT-04:00) Atlantic Time - Halifax', label: 'America/Halifax' },\n\t{ value: '(GMT-04:00) Guyana', label: 'America/Guyana' },\n\t{ value: '(GMT-04:00) La Paz', label: 'America/La_Paz' },\n\t{ value: '(GMT-03:00) Buenos Aires', label: 'America/Argentina/Buenos_Aires' },\n\t{ value: '(GMT-03:00) Godthab', label: 'America/Godthab' },\n\t{ value: '(GMT-03:00) Montevideo', label: 'America/Montevideo' },\n\t{ value: '(GMT-03:30) Newfoundland Time - St. Johns', label: 'America/St_Johns' },\n\t{ value: '(GMT-03:00) Santiago', label: 'America/Santiago' },\n\t{ value: '(GMT-02:00) Sao Paulo', label: 'America/Sao_Paulo' },\n\t{ value: '(GMT-02:00) South Georgia', label: 'Atlantic/South_Georgia' },\n\t{ value: '(GMT-01:00) Azores', label: 'Atlantic/Azores' },\n\t{ value: '(GMT-01:00) Cape Verde', label: 'Atlantic/Cape_Verde' },\n\t{ value: '(GMT+00:00) Casablanca', label: 'Africa/Casablanca' },\n\t{ value: '(GMT+00:00) Dublin', label: 'Europe/Dublin' },\n\t{ value: '(GMT+00:00) Lisbon', label: 'Europe/Lisbon' },\n\t{ value: '(GMT+00:00) London', label: 'Europe/London' },\n\t{ value: '(GMT+00:00) Monrovia', label: 'Africa/Monrovia' },\n\t{ value: '(GMT+01:00) Algiers', label: 'Africa/Algiers' },\n\t{ value: '(GMT+01:00) Amsterdam', label: 'Europe/Amsterdam' },\n\t{ value: '(GMT+01:00) Berlin', label: 'Europe/Berlin' },\n\t{ value: '(GMT+01:00) Brussels', label: 'Europe/Brussels' },\n\t{ value: '(GMT+01:00) Budapest', label: 'Europe/Budapest' },\n\t{ value: '(GMT+01:00) Central European Time - Belgrade', label: 'Europe/Belgrade' },\n\t{ value: '(GMT+01:00) Central European Time - Prague', label: 'Europe/Prague' },\n\t{ value: '(GMT+01:00) Copenhagen', label: 'Europe/Copenhagen' },\n\t{ value: '(GMT+01:00) Madrid', label: 'Europe/Madrid' },\n\t{ value: '(GMT+01:00) Paris', label: 'Europe/Paris' },\n\t{ value: '(GMT+01:00) Rome', label: 'Europe/Rome' },\n\t{ value: '(GMT+01:00) Stockholm', label: 'Europe/Stockholm' },\n\t{ value: '(GMT+01:00) Vienna', label: 'Europe/Vienna' },\n\t{ value: '(GMT+01:00) Warsaw', label: 'Europe/Warsaw' },\n\t{ value: '(GMT+02:00) Athens', label: 'Europe/Athens' },\n\t{ value: '(GMT+02:00) Bucharest', label: 'Europe/Bucharest' },\n\t{ value: '(GMT+02:00) Cairo', label: 'Africa/Cairo' },\n\t{ value: '(GMT+02:00) Jerusalem', label: 'Asia/Jerusalem' },\n\t{ value: '(GMT+02:00) Johannesburg', label: 'Africa/Johannesburg' },\n\t{ value: '(GMT+02:00) Helsinki', label: 'Europe/Helsinki' },\n\t{ value: '(GMT+02:00) Kiev', label: 'Europe/Kiev' },\n\t{ value: '(GMT+02:00) Moscow-01 - Kaliningrad', label: 'Europe/Kaliningrad' },\n\t{ value: '(GMT+02:00) Riga', label: 'Europe/Riga' },\n\t{ value: '(GMT+02:00) Sofia', label: 'Europe/Sofia' },\n\t{ value: '(GMT+02:00) Tallinn', label: 'Europe/Tallinn' },\n\t{ value: '(GMT+02:00) Vilnius', label: 'Europe/Vilnius' },\n\t{ value: '(GMT+03:00) Istanbul', label: 'Europe/Istanbul' },\n\t{ value: '(GMT+03:00) Baghdad', label: 'Asia/Baghdad' },\n\t{ value: '(GMT+03:00) Nairobi', label: 'Africa/Nairobi' },\n\t{ value: '(GMT+03:00) Minsk', label: 'Europe/Minsk' },\n\t{ value: '(GMT+03:00) Riyadh', label: 'Asia/Riyadh' },\n\t{ value: '(GMT+03:00) Moscow+00 - Moscow', label: 'Europe/Moscow' },\n\t{ value: '(GMT+03:30) Tehran', label: 'Asia/Tehran' },\n\t{ value: '(GMT+04:00) Baku', label: 'Asia/Baku' },\n\t{ value: '(GMT+04:00) Moscow+01 - Samara', label: 'Europe/Samara' },\n\t{ value: '(GMT+04:00) Tbilisi', label: 'Asia/Tbilisi' },\n\t{ value: '(GMT+04:00) Yerevan', label: 'Asia/Yerevan' },\n\t{ value: '(GMT+04:30) Kabul', label: 'Asia/Kabul' },\n\t{ value: '(GMT+05:00) Karachi', label: 'Asia/Karachi' },\n\t{ value: '(GMT+05:00) Moscow+02 - Yekaterinburg', label: 'Asia/Yekaterinburg' },\n\t{ value: '(GMT+05:00) Tashkent', label: 'Asia/Tashkent' },\n\t{ value: '(GMT+05:30) Colombo', label: 'Asia/Colombo' },\n\t{ value: '(GMT+06:00) Almaty', label: 'Asia/Almaty' },\n\t{ value: '(GMT+06:00) Dhaka', label: 'Asia/Dhaka' },\n\t{ value: '(GMT+06:30) Rangoon', label: 'Asia/Rangoon' },\n\t{ value: '(GMT+07:00) Bangkok', label: 'Asia/Bangkok' },\n\t{ value: '(GMT+07:00) Jakarta', label: 'Asia/Jakarta' },\n\t{ value: '(GMT+07:00) Moscow+04 - Krasnoyarsk', label: 'Asia/Krasnoyarsk' },\n\t{ value: '(GMT+08:00) China Time - Beijing', label: 'Asia/Shanghai' },\n\t{ value: '(GMT+08:00) Hong Kong', label: 'Asia/Hong_Kong' },\n\t{ value: '(GMT+08:00) Kuala Lumpur', label: 'Asia/Kuala_Lumpur' },\n\t{ value: '(GMT+08:00) Moscow+05 - Irkutsk', label: 'Asia/Irkutsk' },\n\t{ value: '(GMT+08:00) Singapore', label: 'Asia/Singapore' },\n\t{ value: '(GMT+08:00) Taipei', label: 'Asia/Taipei' },\n\t{ value: '(GMT+08:00) Ulaanbaatar', label: 'Asia/Ulaanbaatar' },\n\t{ value: '(GMT+08:00) Western Time - Perth', label: 'Australia/Perth' },\n\t{ value: '(GMT+09:00) Moscow+06 - Yakutsk', label: 'Asia/Yakutsk' },\n\t{ value: '(GMT+09:00) Seoul', label: 'Asia/Seoul' },\n\t{ value: '(GMT+09:00) Tokyo', label: 'Asia/Tokyo' },\n\t{ value: '(GMT+09:30) Central Time - Darwin', label: 'Australia/Darwin' },\n\t{ value: '(GMT+10:00) Eastern Time - Brisbane', label: 'Australia/Brisbane' },\n\t{ value: '(GMT+10:00) Guam', label: 'Pacific/Guam' },\n\t{ value: '(GMT+10:00) Moscow+07 - Magadan', label: 'Asia/Magadan' },\n\t{ value: '(GMT+10:00) Moscow+07 - Yuzhno-Sakhalinsk', label: 'Asia/Vladivostok' },\n\t{ value: '(GMT+10:00) Port Moresby', label: 'Pacific/Port_Moresby' },\n\t{ value: '(GMT+10:30) Central Time - Adelaide', label: 'Australia/Adelaide' },\n\t{ value: '(GMT+11:00) Eastern Time - Hobart', label: 'Australia/Hobart' },\n\t{ value: '(GMT+11:00) Eastern Time - Melbourne}, Sydney', label: 'Australia/Sydney' },\n\t{ value: '(GMT+11:00) Guadalcanal', label: 'Pacific/Guadalcanal' },\n\t{ value: '(GMT+11:00) Noumea', label: 'Pacific/Noumea' },\n\t{ value: '(GMT+12:00) Majuro', label: 'Pacific/Majuro' },\n\t{ value: '(GMT+12:00) Moscow+09 - Petropavlovsk-Kamchatskiy', label: 'Asia/Kamchatka' },\n\t{ value: '(GMT+13:00) Auckland', label: 'Pacific/Auckland' },\n\t{ value: '(GMT+13:00) Fakaofo', label: 'Pacific/Fakaofo' },\n\t{ value: '(GMT+13:00) Fiji', label: 'Pacific/Fiji' },\n\t{ value: '(GMT+13:00) Tongatapu', label: 'Pacific/Tongatapu' },\n\t{ value: '(GMT+14:00) Apia', label: 'Pacific/Apia' },\n];\n\nexport const timezones = [\n\t{\n\t\tlabel: '(GMT-11:00) Pago Pago',\n\t\tvalue: 'Pacific/Pago_Pago',\n\t},\n\t{\n\t\tlabel: '(GMT-10:00) Hawaii Time',\n\t\tvalue: 'Pacific/Honolulu',\n\t},\n\t{\n\t\tlabel: '(GMT-08:00) Pacific Time',\n\t\tvalue: 'America/Los_Angeles',\n\t},\n\t{\n\t\tlabel: '(GMT-08:00) Pacific Time - Tijuana',\n\t\tvalue: 'America/Tijuana',\n\t},\n\t{\n\t\tlabel: '(GMT-07:00) Mountain Time',\n\t\tvalue: 'America/Denver',\n\t},\n\t{\n\t\tlabel: '(GMT-07:00) Mountain Time - Arizona',\n\t\tvalue: 'America/Phoenix',\n\t},\n\t{\n\t\tlabel: '(GMT-07:00) Mountain Time - Chihuahua}, Mazatlan',\n\t\tvalue: 'America/Mazatlan',\n\t},\n\t{\n\t\tlabel: '(GMT-06:00) Central Time',\n\t\tvalue: 'America/Chicago',\n\t},\n\t{\n\t\tlabel: '(GMT-06:00) Central Time - Mexico City',\n\t\tvalue: 'America/Mexico_City',\n\t},\n\t{\n\t\tlabel: '(GMT-06:00) Central Time - Regina',\n\t\tvalue: 'America/Regina',\n\t},\n\t{\n\t\tlabel: '(GMT-06:00) Guatemala',\n\t\tvalue: 'America/Guatemala',\n\t},\n\t{\n\t\tlabel: '(GMT-05:00) Bogota',\n\t\tvalue: 'America/Bogota',\n\t},\n\t{\n\t\tlabel: '(GMT-05:00) Eastern Time',\n\t\tvalue: 'America/New_York',\n\t},\n\t{\n\t\tlabel: '(GMT-05:00) Lima',\n\t\tvalue: 'America/Lima',\n\t},\n\t{\n\t\tlabel: '(GMT-04:30) Caracas',\n\t\tvalue: 'America/Caracas',\n\t},\n\t{\n\t\tlabel: '(GMT-04:00) Atlantic Time - Halifax',\n\t\tvalue: 'America/Halifax',\n\t},\n\t{\n\t\tlabel: '(GMT-04:00) Guyana',\n\t\tvalue: 'America/Guyana',\n\t},\n\t{\n\t\tlabel: '(GMT-04:00) La Paz',\n\t\tvalue: 'America/La_Paz',\n\t},\n\t{\n\t\tlabel: '(GMT-03:00) Buenos Aires',\n\t\tvalue: 'America/Argentina/Buenos_Aires',\n\t},\n\t{\n\t\tlabel: '(GMT-03:00) Godthab',\n\t\tvalue: 'America/Godthab',\n\t},\n\t{\n\t\tlabel: '(GMT-03:00) Montevideo',\n\t\tvalue: 'America/Montevideo',\n\t},\n\t{\n\t\tlabel: '(GMT-03:30) Newfoundland Time - St. Johns',\n\t\tvalue: 'America/St_Johns',\n\t},\n\t{\n\t\tlabel: '(GMT-03:00) Santiago',\n\t\tvalue: 'America/Santiago',\n\t},\n\t{\n\t\tlabel: '(GMT-02:00) Sao Paulo',\n\t\tvalue: 'America/Sao_Paulo',\n\t},\n\t{\n\t\tlabel: '(GMT-02:00) South Georgia',\n\t\tvalue: 'Atlantic/South_Georgia',\n\t},\n\t{\n\t\tlabel: '(GMT-01:00) Azores',\n\t\tvalue: 'Atlantic/Azores',\n\t},\n\t{\n\t\tlabel: '(GMT-01:00) Cape Verde',\n\t\tvalue: 'Atlantic/Cape_Verde',\n\t},\n\t{\n\t\tlabel: '(GMT+00:00) Casablanca',\n\t\tvalue: 'Africa/Casablanca',\n\t},\n\t{\n\t\tlabel: '(GMT+00:00) Dublin',\n\t\tvalue: 'Europe/Dublin',\n\t},\n\t{\n\t\tlabel: '(GMT+00:00) Lisbon',\n\t\tvalue: 'Europe/Lisbon',\n\t},\n\t{\n\t\tlabel: '(GMT+00:00) London',\n\t\tvalue: 'Europe/London',\n\t},\n\t{\n\t\tlabel: '(GMT+00:00) Monrovia',\n\t\tvalue: 'Africa/Monrovia',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Algiers',\n\t\tvalue: 'Africa/Algiers',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Amsterdam',\n\t\tvalue: 'Europe/Amsterdam',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Berlin',\n\t\tvalue: 'Europe/Berlin',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Brussels',\n\t\tvalue: 'Europe/Brussels',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Budapest',\n\t\tvalue: 'Europe/Budapest',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Central European Time - Belgrade',\n\t\tvalue: 'Europe/Belgrade',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Central European Time - Prague',\n\t\tvalue: 'Europe/Prague',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Copenhagen',\n\t\tvalue: 'Europe/Copenhagen',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Madrid',\n\t\tvalue: 'Europe/Madrid',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Paris',\n\t\tvalue: 'Europe/Paris',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Rome',\n\t\tvalue: 'Europe/Rome',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Stockholm',\n\t\tvalue: 'Europe/Stockholm',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Vienna',\n\t\tvalue: 'Europe/Vienna',\n\t},\n\t{\n\t\tlabel: '(GMT+01:00) Warsaw',\n\t\tvalue: 'Europe/Warsaw',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Athens',\n\t\tvalue: 'Europe/Athens',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Bucharest',\n\t\tvalue: 'Europe/Bucharest',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Cairo',\n\t\tvalue: 'Africa/Cairo',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Jerusalem',\n\t\tvalue: 'Asia/Jerusalem',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Johannesburg',\n\t\tvalue: 'Africa/Johannesburg',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Helsinki',\n\t\tvalue: 'Europe/Helsinki',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Kiev',\n\t\tvalue: 'Europe/Kiev',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Moscow-01 - Kaliningrad',\n\t\tvalue: 'Europe/Kaliningrad',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Riga',\n\t\tvalue: 'Europe/Riga',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Sofia',\n\t\tvalue: 'Europe/Sofia',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Tallinn',\n\t\tvalue: 'Europe/Tallinn',\n\t},\n\t{\n\t\tlabel: '(GMT+02:00) Vilnius',\n\t\tvalue: 'Europe/Vilnius',\n\t},\n\t{\n\t\tlabel: '(GMT+03:00) Istanbul',\n\t\tvalue: 'Europe/Istanbul',\n\t},\n\t{\n\t\tlabel: '(GMT+03:00) Baghdad',\n\t\tvalue: 'Asia/Baghdad',\n\t},\n\t{\n\t\tlabel: '(GMT+03:00) Nairobi',\n\t\tvalue: 'Africa/Nairobi',\n\t},\n\t{\n\t\tlabel: '(GMT+03:00) Minsk',\n\t\tvalue: 'Europe/Minsk',\n\t},\n\t{\n\t\tlabel: '(GMT+03:00) Riyadh',\n\t\tvalue: 'Asia/Riyadh',\n\t},\n\t{\n\t\tlabel: '(GMT+03:00) Moscow+00 - Moscow',\n\t\tvalue: 'Europe/Moscow',\n\t},\n\t{\n\t\tlabel: '(GMT+03:30) Tehran',\n\t\tvalue: 'Asia/Tehran',\n\t},\n\t{\n\t\tlabel: '(GMT+04:00) Baku',\n\t\tvalue: 'Asia/Baku',\n\t},\n\t{\n\t\tlabel: '(GMT+04:00) Moscow+01 - Samara',\n\t\tvalue: 'Europe/Samara',\n\t},\n\t{\n\t\tlabel: '(GMT+04:00) Tbilisi',\n\t\tvalue: 'Asia/Tbilisi',\n\t},\n\t{\n\t\tlabel: '(GMT+04:00) Yerevan',\n\t\tvalue: 'Asia/Yerevan',\n\t},\n\t{\n\t\tlabel: '(GMT+04:30) Kabul',\n\t\tvalue: 'Asia/Kabul',\n\t},\n\t{\n\t\tlabel: '(GMT+05:00) Karachi',\n\t\tvalue: 'Asia/Karachi',\n\t},\n\t{\n\t\tlabel: '(GMT+05:00) Moscow+02 - Yekaterinburg',\n\t\tvalue: 'Asia/Yekaterinburg',\n\t},\n\t{\n\t\tlabel: '(GMT+05:00) Tashkent',\n\t\tvalue: 'Asia/Tashkent',\n\t},\n\t{\n\t\tlabel: '(GMT+05:30) Colombo',\n\t\tvalue: 'Asia/Colombo',\n\t},\n\t{\n\t\tlabel: '(GMT+06:00) Almaty',\n\t\tvalue: 'Asia/Almaty',\n\t},\n\t{\n\t\tlabel: '(GMT+06:00) Dhaka',\n\t\tvalue: 'Asia/Dhaka',\n\t},\n\t{\n\t\tlabel: '(GMT+06:30) Rangoon',\n\t\tvalue: 'Asia/Rangoon',\n\t},\n\t{\n\t\tlabel: '(GMT+07:00) Bangkok',\n\t\tvalue: 'Asia/Bangkok',\n\t},\n\t{\n\t\tlabel: '(GMT+07:00) Jakarta',\n\t\tvalue: 'Asia/Jakarta',\n\t},\n\t{\n\t\tlabel: '(GMT+07:00) Moscow+04 - Krasnoyarsk',\n\t\tvalue: 'Asia/Krasnoyarsk',\n\t},\n\t{\n\t\tlabel: '(GMT+08:00) China Time - Beijing',\n\t\tvalue: 'Asia/Shanghai',\n\t},\n\t{\n\t\tlabel: '(GMT+08:00) Hong Kong',\n\t\tvalue: 'Asia/Hong_Kong',\n\t},\n\t{\n\t\tlabel: '(GMT+08:00) Kuala Lumpur',\n\t\tvalue: 'Asia/Kuala_Lumpur',\n\t},\n\t{\n\t\tlabel: '(GMT+08:00) Moscow+05 - Irkutsk',\n\t\tvalue: 'Asia/Irkutsk',\n\t},\n\t{\n\t\tlabel: '(GMT+08:00) Singapore',\n\t\tvalue: 'Asia/Singapore',\n\t},\n\t{\n\t\tlabel: '(GMT+08:00) Taipei',\n\t\tvalue: 'Asia/Taipei',\n\t},\n\t{\n\t\tlabel: '(GMT+08:00) Ulaanbaatar',\n\t\tvalue: 'Asia/Ulaanbaatar',\n\t},\n\t{\n\t\tlabel: '(GMT+08:00) Western Time - Perth',\n\t\tvalue: 'Australia/Perth',\n\t},\n\t{\n\t\tlabel: '(GMT+09:00) Moscow+06 - Yakutsk',\n\t\tvalue: 'Asia/Yakutsk',\n\t},\n\t{\n\t\tlabel: '(GMT+09:00) Seoul',\n\t\tvalue: 'Asia/Seoul',\n\t},\n\t{\n\t\tlabel: '(GMT+09:00) Tokyo',\n\t\tvalue: 'Asia/Tokyo',\n\t},\n\t{\n\t\tlabel: '(GMT+09:30) Central Time - Darwin',\n\t\tvalue: 'Australia/Darwin',\n\t},\n\t{\n\t\tlabel: '(GMT+10:00) Eastern Time - Brisbane',\n\t\tvalue: 'Australia/Brisbane',\n\t},\n\t{\n\t\tlabel: '(GMT+10:00) Guam',\n\t\tvalue: 'Pacific/Guam',\n\t},\n\t{\n\t\tlabel: '(GMT+10:00) Moscow+07 - Magadan',\n\t\tvalue: 'Asia/Magadan',\n\t},\n\t{\n\t\tlabel: '(GMT+10:00) Moscow+07 - Yuzhno-Sakhalinsk',\n\t\tvalue: 'Asia/Vladivostok',\n\t},\n\t{\n\t\tlabel: '(GMT+10:00) Port Moresby',\n\t\tvalue: 'Pacific/Port_Moresby',\n\t},\n\t{\n\t\tlabel: '(GMT+10:30) Central Time - Adelaide',\n\t\tvalue: 'Australia/Adelaide',\n\t},\n\t{\n\t\tlabel: '(GMT+11:00) Eastern Time - Hobart',\n\t\tvalue: 'Australia/Hobart',\n\t},\n\t{\n\t\tlabel: '(GMT+11:00) Eastern Time - Melbourne}, Sydney',\n\t\tvalue: 'Australia/Sydney',\n\t},\n\t{\n\t\tlabel: '(GMT+11:00) Guadalcanal',\n\t\tvalue: 'Pacific/Guadalcanal',\n\t},\n\t{\n\t\tlabel: '(GMT+11:00) Noumea',\n\t\tvalue: 'Pacific/Noumea',\n\t},\n\t{\n\t\tlabel: '(GMT+12:00) Majuro',\n\t\tvalue: 'Pacific/Majuro',\n\t},\n\t{\n\t\tlabel: '(GMT+12:00) Moscow+09 - Petropavlovsk-Kamchatskiy',\n\t\tvalue: 'Asia/Kamchatka',\n\t},\n\t{\n\t\tlabel: '(GMT+13:00) Auckland',\n\t\tvalue: 'Pacific/Auckland',\n\t},\n\t{\n\t\tlabel: '(GMT+13:00) Fakaofo',\n\t\tvalue: 'Pacific/Fakaofo',\n\t},\n\t{\n\t\tlabel: '(GMT+13:00) Fiji',\n\t\tvalue: 'Pacific/Fiji',\n\t},\n\t{\n\t\tlabel: '(GMT+13:00) Tongatapu',\n\t\tvalue: 'Pacific/Tongatapu',\n\t},\n\t{\n\t\tlabel: '(GMT+14:00) Apia',\n\t\tvalue: 'Pacific/Apia',\n\t},\n];\n\n/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport const isFunction = value => {\n\treturn typeof value === 'function';\n};\nexport function tcWrapper(f) {\n\treturn function () {\n\t\ttry {\n\t\t\treturn f.apply(this, arguments);\n\t\t} catch (e) {\n\t\t\t// console.log(e);\n\t\t}\n\t};\n}\nexport function controlledUnsubscription(fn) {\n\ttry {\n\t\treturn fn?.unsubscribe?.();\n\t} catch (error) {\n\t\tconsole.warn(error);\n\t}\n}\nexport const industryFields = [\n\t{\n\t\tlabel: 'Agriculture/Farming',\n\t\tvalue: '620100745dd99b4ce205f40f',\n\t\tid: '620100745dd99b4ce205f40f',\n\t},\n\n\t{\n\t\tlabel: 'Arts/Culture/Entertainment',\n\t\tvalue: '620100745dd99b4ce205f385',\n\t\tid: '620100745dd99b4ce205f385',\n\t},\n\n\t{\n\t\tlabel: 'Construction',\n\t\tvalue: '620100745dd99b4ce205f397',\n\t\tid: '620100745dd99b4ce205f397',\n\t},\n\n\t{\n\t\tlabel: 'Food',\n\t\tvalue: '620100745dd99b4ce205f3ac',\n\t\tid: '620100745dd99b4ce205f3ac',\n\t},\n\n\t{\n\t\tlabel: 'Manufacturing',\n\t\tvalue: '620100745dd99b4ce205f37f',\n\t\tid: '620100745dd99b4ce205f37f',\n\t},\n\n\t{\n\t\tlabel: 'Health',\n\t\tvalue: '620100745dd99b4ce205f380',\n\t\tid: '620100745dd99b4ce205f380',\n\t},\n\n\t{\n\t\tlabel: 'Information Technology',\n\t\tvalue: '620100745dd99b4ce205f37e',\n\t\tid: '620100745dd99b4ce205f37e',\n\t},\n\n\t{\n\t\tlabel: 'Government',\n\t\tvalue: '620100745dd99b4ce205f381',\n\t\tid: '620100745dd99b4ce205f381',\n\t},\n\n\t{\n\t\tlabel: 'Consumer',\n\t\tvalue: '620100745dd99b4ce205f382',\n\t\tid: '620100745dd99b4ce205f382',\n\t},\n\n\t{\n\t\tlabel: 'Computer & Electronics',\n\t\tvalue: '620100745dd99b4ce205f384',\n\t\tid: '620100745dd99b4ce205f384',\n\t},\n\n\t{\n\t\tlabel: 'Finance/Banking',\n\t\tvalue: '620100745dd99b4ce205f388',\n\t\tid: '620100745dd99b4ce205f388',\n\t},\n\n\t{\n\t\tlabel: 'Others',\n\t\tvalue: '620100745dd99b4ce205f3af',\n\t\tid: '620100745dd99b4ce205f3af',\n\t},\n];\n\nexport const ipsum =\n\t'Lorem ipsum dolor sit amet. Ad placeat voluptatem in omnis animi et quibusdam voluptatem sit sequi atque. Et obcaecati quidem non reiciendis inventore quo repellat voluptatem sed odit dolores et dolores unde et doloribus tempora aut debitis quis. </p><p>A quia adipisci sit repellendus autem sed molestiae reprehenderit nam laudantium quidem At porro enim nam rerum consequatur. Ut eveniet nemo et iste voluptatem et accusantium asperiores. </p><p>Eum ullam iure nam perferendis rerum aut ipsam quaerat et fugiat corrupti in consequuntur quam ad libero eligendi. Et atque facilis sed illum totam ut veniam totam est aliquid praesentium et laboriosam distinctio qui tempore deserunt aut quia magni? Est error reiciendis ea sunt modi in illum necessitatibus? Vel reiciendis eveniet sit commodi voluptas eum facere dolores et explicabo eius vel voluptatem tenetur et soluta sunt';\n\nexport const freescoresheet =\n\t'This is a FIBA rules compatible basketball scoresheet. This is a free to use web page for recording statistics and play-by-play action for the game of basketball. The games recorded here are saved locally on your computer and not on the cloud. Game data are deleted once you clear your cache or press the CLEAR GAME button. To start using this scoresheet, enter at least five players for two teams by clicking the add player buttons, input the player number and name. Set the starting roster by checking the box besides the player number. Once you save your starting lineup, the scoresheet will appear. Recording begins when you select the 1st quarter in the dropdown box on the upper left side of the screen. You may begin to record manually the statistics by entering the appropriate values for each statistic. You can also use the play-by-play mode which will only require you to point and click the appropriate buttons. Do note that we are not responsible for any data lost when using this free-to-use software. We have a subscription-based model for users which requires more advanced tournament settings and cloud storage. You can help us maintain this website by becoming a supporter on our Patreon page. Thank you very much'\nexport const ourVisionMock = ipsum;\nexport const coreValuesMock = [ipsum];\nexport const ourMissionMock = ipsum;\nexport const companyStandardsMock = [ipsum];\n\n//import Path from 'path';\n\nimport htmlfile from './email.html';\nimport cssfile from './utility.scss';\nimport ReactDOMServer from 'react-dom/server';\nimport moment, { now } from 'moment';\nimport { object } from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDiamond, faTags } from '@fortawesome/free-solid-svg-icons';\nimport { useSelector } from 'react-redux';\nimport { isMobile } from 'react-device-detect';\n\nconst STYLE_TAG = '%STYLE%';\nconst CONTENT_TAG = '%CONTENT%';\n\nexport const createEmail = component => {\n\t//const emailElement = React.createElement(component);\n\tconst content = ReactDOMServer.renderToString(component);\n\n\t// Replace the template tags with the content\n\tlet emailHTML = htmlfile;\n\temailHTML = emailHTML.replace(CONTENT_TAG, content);\n\temailHTML = emailHTML.replace(STYLE_TAG, cssfile);\n\n\treturn emailHTML;\n};\n\nexport const country_list = [\n\t{\n\t\tvalue: 'AF',\n\t\tlabel: 'Afghanistan',\n\t},\n\t{\n\t\tvalue: 'AX',\n\t\tlabel: 'Åland Islands',\n\t},\n\t{\n\t\tvalue: 'AL',\n\t\tlabel: 'Albania',\n\t},\n\t{\n\t\tvalue: 'DZ',\n\t\tlabel: 'Algeria',\n\t},\n\t{\n\t\tvalue: 'AS',\n\t\tlabel: 'American Samoa',\n\t},\n\t{\n\t\tvalue: 'AD',\n\t\tlabel: 'Andorra',\n\t},\n\t{\n\t\tvalue: 'AO',\n\t\tlabel: 'Angola',\n\t},\n\t{\n\t\tvalue: 'AI',\n\t\tlabel: 'Anguilla',\n\t},\n\t{\n\t\tvalue: 'AQ',\n\t\tlabel: 'Antarctica',\n\t},\n\t{\n\t\tvalue: 'AG',\n\t\tlabel: 'Antigua and Barbuda',\n\t},\n\t{\n\t\tvalue: 'AR',\n\t\tlabel: 'Argentina',\n\t},\n\t{\n\t\tvalue: 'AM',\n\t\tlabel: 'Armenia',\n\t},\n\t{\n\t\tvalue: 'AW',\n\t\tlabel: 'Aruba',\n\t},\n\t{\n\t\tvalue: 'AU',\n\t\tlabel: 'Australia',\n\t},\n\t{\n\t\tvalue: 'AT',\n\t\tlabel: 'Austria',\n\t},\n\t{\n\t\tvalue: 'AZ',\n\t\tlabel: 'Azerbaijan',\n\t},\n\t{\n\t\tvalue: 'BS',\n\t\tlabel: 'Bahamas',\n\t},\n\t{\n\t\tvalue: 'BH',\n\t\tlabel: 'Bahrain',\n\t},\n\t{\n\t\tvalue: 'BD',\n\t\tlabel: 'Bangladesh',\n\t},\n\t{\n\t\tvalue: 'BB',\n\t\tlabel: 'Barbados',\n\t},\n\t{\n\t\tvalue: 'BY',\n\t\tlabel: 'Belarus',\n\t},\n\t{\n\t\tvalue: 'BE',\n\t\tlabel: 'Belgium',\n\t},\n\t{\n\t\tvalue: 'BZ',\n\t\tlabel: 'Belize',\n\t},\n\t{\n\t\tvalue: 'BJ',\n\t\tlabel: 'Benin',\n\t},\n\t{\n\t\tvalue: 'BM',\n\t\tlabel: 'Bermuda',\n\t},\n\t{\n\t\tvalue: 'BT',\n\t\tlabel: 'Bhutan',\n\t},\n\t{\n\t\tvalue: 'BO',\n\t\tlabel: 'Bolivia, Plurinational State of',\n\t},\n\t{\n\t\tvalue: 'BQ',\n\t\tlabel: 'Bonaire, Sint Eustatius and Saba',\n\t},\n\t{\n\t\tvalue: 'BA',\n\t\tlabel: 'Bosnia and Herzegovina',\n\t},\n\t{\n\t\tvalue: 'BW',\n\t\tlabel: 'Botswana',\n\t},\n\t{\n\t\tvalue: 'BV',\n\t\tlabel: 'Bouvet Island',\n\t},\n\t{\n\t\tvalue: 'BR',\n\t\tlabel: 'Brazil',\n\t},\n\t{\n\t\tvalue: 'IO',\n\t\tlabel: 'British Indian Ocean Territory',\n\t},\n\t{\n\t\tvalue: 'BN',\n\t\tlabel: 'Brunei Darussalam',\n\t},\n\t{\n\t\tvalue: 'BG',\n\t\tlabel: 'Bulgaria',\n\t},\n\t{\n\t\tvalue: 'BF',\n\t\tlabel: 'Burkina Faso',\n\t},\n\t{\n\t\tvalue: 'BI',\n\t\tlabel: 'Burundi',\n\t},\n\t{\n\t\tvalue: 'CV',\n\t\tlabel: 'Cabo Verde',\n\t},\n\t{\n\t\tvalue: 'KH',\n\t\tlabel: 'Cambodia',\n\t},\n\t{\n\t\tvalue: 'CM',\n\t\tlabel: 'Cameroon',\n\t},\n\t{\n\t\tvalue: 'CA',\n\t\tlabel: 'Canada',\n\t},\n\t{\n\t\tvalue: 'KY',\n\t\tlabel: 'Cayman Islands',\n\t},\n\t{\n\t\tvalue: 'CF',\n\t\tlabel: 'Central African Republic',\n\t},\n\t{\n\t\tvalue: 'TD',\n\t\tlabel: 'Chad',\n\t},\n\t{\n\t\tvalue: 'CL',\n\t\tlabel: 'Chile',\n\t},\n\t{\n\t\tvalue: 'CN',\n\t\tlabel: 'China',\n\t},\n\t{\n\t\tvalue: 'CX',\n\t\tlabel: 'Christmas Island',\n\t},\n\t{\n\t\tvalue: 'CC',\n\t\tlabel: 'Cocos (Keeling) Islands',\n\t},\n\t{\n\t\tvalue: 'CO',\n\t\tlabel: 'Colombia',\n\t},\n\t{\n\t\tvalue: 'KM',\n\t\tlabel: 'Comoros',\n\t},\n\t{\n\t\tvalue: 'CG',\n\t\tlabel: 'Congo',\n\t},\n\t{\n\t\tvalue: 'CD',\n\t\tlabel: 'Congo, Democratic Republic of the',\n\t},\n\t{\n\t\tvalue: 'CK',\n\t\tlabel: 'Cook Islands',\n\t},\n\t{\n\t\tvalue: 'CR',\n\t\tlabel: 'Costa Rica',\n\t},\n\t{\n\t\tvalue: 'HR',\n\t\tlabel: 'Croatia',\n\t},\n\t{\n\t\tvalue: 'CU',\n\t\tlabel: 'Cuba',\n\t},\n\t{\n\t\tvalue: 'CW',\n\t\tlabel: 'Curaçao',\n\t},\n\t{\n\t\tvalue: 'CY',\n\t\tlabel: 'Cyprus',\n\t},\n\t{\n\t\tvalue: 'CZ',\n\t\tlabel: 'Czechia',\n\t},\n\t{\n\t\tvalue: 'CI',\n\t\tlabel: \"Côte d'Ivoire\",\n\t},\n\t{\n\t\tvalue: 'DK',\n\t\tlabel: 'Denmark',\n\t},\n\t{\n\t\tvalue: 'DJ',\n\t\tlabel: 'Djibouti',\n\t},\n\t{\n\t\tvalue: 'DM',\n\t\tlabel: 'Dominica',\n\t},\n\t{\n\t\tvalue: 'DO',\n\t\tlabel: 'Dominican Republic',\n\t},\n\t{\n\t\tvalue: 'EC',\n\t\tlabel: 'Ecuador',\n\t},\n\t{\n\t\tvalue: 'EG',\n\t\tlabel: 'Egypt',\n\t},\n\t{\n\t\tvalue: 'SV',\n\t\tlabel: 'El Salvador',\n\t},\n\t{\n\t\tvalue: 'GQ',\n\t\tlabel: 'Equatorial Guinea',\n\t},\n\t{\n\t\tvalue: 'ER',\n\t\tlabel: 'Eritrea',\n\t},\n\t{\n\t\tvalue: 'EE',\n\t\tlabel: 'Estonia',\n\t},\n\t{\n\t\tvalue: 'SZ',\n\t\tlabel: 'Eswatini',\n\t},\n\t{\n\t\tvalue: 'ET',\n\t\tlabel: 'Ethiopia',\n\t},\n\t{\n\t\tvalue: 'FK',\n\t\tlabel: 'Falkland Islands (Malvinas)',\n\t},\n\t{\n\t\tvalue: 'FO',\n\t\tlabel: 'Faroe Islands',\n\t},\n\t{\n\t\tvalue: 'FJ',\n\t\tlabel: 'Fiji',\n\t},\n\t{\n\t\tvalue: 'FI',\n\t\tlabel: 'Finland',\n\t},\n\t{\n\t\tvalue: 'FR',\n\t\tlabel: 'France',\n\t},\n\t{\n\t\tvalue: 'GF',\n\t\tlabel: 'French Guiana',\n\t},\n\t{\n\t\tvalue: 'PF',\n\t\tlabel: 'French Polynesia',\n\t},\n\t{\n\t\tvalue: 'TF',\n\t\tlabel: 'French Southern Territories',\n\t},\n\t{\n\t\tvalue: 'GA',\n\t\tlabel: 'Gabon',\n\t},\n\t{\n\t\tvalue: 'GM',\n\t\tlabel: 'Gambia',\n\t},\n\t{\n\t\tvalue: 'GE',\n\t\tlabel: 'Georgia',\n\t},\n\t{\n\t\tvalue: 'DE',\n\t\tlabel: 'Germany',\n\t},\n\t{\n\t\tvalue: 'GH',\n\t\tlabel: 'Ghana',\n\t},\n\t{\n\t\tvalue: 'GI',\n\t\tlabel: 'Gibraltar',\n\t},\n\t{\n\t\tvalue: 'GR',\n\t\tlabel: 'Greece',\n\t},\n\t{\n\t\tvalue: 'GL',\n\t\tlabel: 'Greenland',\n\t},\n\t{\n\t\tvalue: 'GD',\n\t\tlabel: 'Grenada',\n\t},\n\t{\n\t\tvalue: 'GP',\n\t\tlabel: 'Guadeloupe',\n\t},\n\t{\n\t\tvalue: 'GU',\n\t\tlabel: 'Guam',\n\t},\n\t{\n\t\tvalue: 'GT',\n\t\tlabel: 'Guatemala',\n\t},\n\t{\n\t\tvalue: 'GG',\n\t\tlabel: 'Guernsey',\n\t},\n\t{\n\t\tvalue: 'GN',\n\t\tlabel: 'Guinea',\n\t},\n\t{\n\t\tvalue: 'GW',\n\t\tlabel: 'Guinea-Bissau',\n\t},\n\t{\n\t\tvalue: 'GY',\n\t\tlabel: 'Guyana',\n\t},\n\t{\n\t\tvalue: 'HT',\n\t\tlabel: 'Haiti',\n\t},\n\t{\n\t\tvalue: 'HM',\n\t\tlabel: 'Heard Island and McDonald Islands',\n\t},\n\t{\n\t\tvalue: 'VA',\n\t\tlabel: 'Holy See',\n\t},\n\t{\n\t\tvalue: 'HN',\n\t\tlabel: 'Honduras',\n\t},\n\t{\n\t\tvalue: 'HK',\n\t\tlabel: 'Hong Kong',\n\t},\n\t{\n\t\tvalue: 'HU',\n\t\tlabel: 'Hungary',\n\t},\n\t{\n\t\tvalue: 'IS',\n\t\tlabel: 'Iceland',\n\t},\n\t{\n\t\tvalue: 'IN',\n\t\tlabel: 'India',\n\t},\n\t{\n\t\tvalue: 'ID',\n\t\tlabel: 'Indonesia',\n\t},\n\t{\n\t\tvalue: 'IR',\n\t\tlabel: 'Iran, Islamic Republic of',\n\t},\n\t{\n\t\tvalue: 'IQ',\n\t\tlabel: 'Iraq',\n\t},\n\t{\n\t\tvalue: 'IE',\n\t\tlabel: 'Ireland',\n\t},\n\t{\n\t\tvalue: 'IM',\n\t\tlabel: 'Isle of Man',\n\t},\n\t{\n\t\tvalue: 'IL',\n\t\tlabel: 'Israel',\n\t},\n\t{\n\t\tvalue: 'IT',\n\t\tlabel: 'Italy',\n\t},\n\t{\n\t\tvalue: 'JM',\n\t\tlabel: 'Jamaica',\n\t},\n\t{\n\t\tvalue: 'JP',\n\t\tlabel: 'Japan',\n\t},\n\t{\n\t\tvalue: 'JE',\n\t\tlabel: 'Jersey',\n\t},\n\t{\n\t\tvalue: 'JO',\n\t\tlabel: 'Jordan',\n\t},\n\t{\n\t\tvalue: 'KZ',\n\t\tlabel: 'Kazakhstan',\n\t},\n\t{\n\t\tvalue: 'KE',\n\t\tlabel: 'Kenya',\n\t},\n\t{\n\t\tvalue: 'KI',\n\t\tlabel: 'Kiribati',\n\t},\n\t{\n\t\tvalue: 'KP',\n\t\tlabel: \"Korea, Democratic People's Republic of\",\n\t},\n\t{\n\t\tvalue: 'KR',\n\t\tlabel: 'Korea, Republic of',\n\t},\n\t{\n\t\tvalue: 'KW',\n\t\tlabel: 'Kuwait',\n\t},\n\t{\n\t\tvalue: 'KG',\n\t\tlabel: 'Kyrgyzstan',\n\t},\n\t{\n\t\tvalue: 'LA',\n\t\tlabel: \"Lao People's Democratic Republic\",\n\t},\n\t{\n\t\tvalue: 'LV',\n\t\tlabel: 'Latvia',\n\t},\n\t{\n\t\tvalue: 'LB',\n\t\tlabel: 'Lebanon',\n\t},\n\t{\n\t\tvalue: 'LS',\n\t\tlabel: 'Lesotho',\n\t},\n\t{\n\t\tvalue: 'LR',\n\t\tlabel: 'Liberia',\n\t},\n\t{\n\t\tvalue: 'LY',\n\t\tlabel: 'Libya',\n\t},\n\t{\n\t\tvalue: 'LI',\n\t\tlabel: 'Liechtenstein',\n\t},\n\t{\n\t\tvalue: 'LT',\n\t\tlabel: 'Lithuania',\n\t},\n\t{\n\t\tvalue: 'LU',\n\t\tlabel: 'Luxembourg',\n\t},\n\t{\n\t\tvalue: 'MO',\n\t\tlabel: 'Macao',\n\t},\n\t{\n\t\tvalue: 'MG',\n\t\tlabel: 'Madagascar',\n\t},\n\t{\n\t\tvalue: 'MW',\n\t\tlabel: 'Malawi',\n\t},\n\t{\n\t\tvalue: 'MY',\n\t\tlabel: 'Malaysia',\n\t},\n\t{\n\t\tvalue: 'MV',\n\t\tlabel: 'Maldives',\n\t},\n\t{\n\t\tvalue: 'ML',\n\t\tlabel: 'Mali',\n\t},\n\t{\n\t\tvalue: 'MT',\n\t\tlabel: 'Malta',\n\t},\n\t{\n\t\tvalue: 'MH',\n\t\tlabel: 'Marshall Islands',\n\t},\n\t{\n\t\tvalue: 'MQ',\n\t\tlabel: 'Martinique',\n\t},\n\t{\n\t\tvalue: 'MR',\n\t\tlabel: 'Mauritania',\n\t},\n\t{\n\t\tvalue: 'MU',\n\t\tlabel: 'Mauritius',\n\t},\n\t{\n\t\tvalue: 'YT',\n\t\tlabel: 'Mayotte',\n\t},\n\t{\n\t\tvalue: 'MX',\n\t\tlabel: 'Mexico',\n\t},\n\t{\n\t\tvalue: 'FM',\n\t\tlabel: 'Micronesia, Federated States of',\n\t},\n\t{\n\t\tvalue: 'MD',\n\t\tlabel: 'Moldova, Republic of',\n\t},\n\t{\n\t\tvalue: 'MC',\n\t\tlabel: 'Monaco',\n\t},\n\t{\n\t\tvalue: 'MN',\n\t\tlabel: 'Mongolia',\n\t},\n\t{\n\t\tvalue: 'ME',\n\t\tlabel: 'Montenegro',\n\t},\n\t{\n\t\tvalue: 'MS',\n\t\tlabel: 'Montserrat',\n\t},\n\t{\n\t\tvalue: 'MA',\n\t\tlabel: 'Morocco',\n\t},\n\t{\n\t\tvalue: 'MZ',\n\t\tlabel: 'Mozambique',\n\t},\n\t{\n\t\tvalue: 'MM',\n\t\tlabel: 'Myanmar',\n\t},\n\t{\n\t\tvalue: 'NA',\n\t\tlabel: 'Namibia',\n\t},\n\t{\n\t\tvalue: 'NR',\n\t\tlabel: 'Nauru',\n\t},\n\t{\n\t\tvalue: 'NP',\n\t\tlabel: 'Nepal',\n\t},\n\t{\n\t\tvalue: 'NL',\n\t\tlabel: 'Netherlands',\n\t},\n\t{\n\t\tvalue: 'NC',\n\t\tlabel: 'New Caledonia',\n\t},\n\t{\n\t\tvalue: 'NZ',\n\t\tlabel: 'New Zealand',\n\t},\n\t{\n\t\tvalue: 'NI',\n\t\tlabel: 'Nicaragua',\n\t},\n\t{\n\t\tvalue: 'NE',\n\t\tlabel: 'Niger',\n\t},\n\t{\n\t\tvalue: 'NG',\n\t\tlabel: 'Nigeria',\n\t},\n\t{\n\t\tvalue: 'NU',\n\t\tlabel: 'Niue',\n\t},\n\t{\n\t\tvalue: 'NF',\n\t\tlabel: 'Norfolk Island',\n\t},\n\t{\n\t\tvalue: 'MK',\n\t\tlabel: 'North Macedonia',\n\t},\n\t{\n\t\tvalue: 'MP',\n\t\tlabel: 'Northern Mariana Islands',\n\t},\n\t{\n\t\tvalue: 'NO',\n\t\tlabel: 'Norway',\n\t},\n\t{\n\t\tvalue: 'OM',\n\t\tlabel: 'Oman',\n\t},\n\t{\n\t\tvalue: 'PK',\n\t\tlabel: 'Pakistan',\n\t},\n\t{\n\t\tvalue: 'PW',\n\t\tlabel: 'Palau',\n\t},\n\t{\n\t\tvalue: 'PS',\n\t\tlabel: 'Palestine, State of',\n\t},\n\t{\n\t\tvalue: 'PA',\n\t\tlabel: 'Panama',\n\t},\n\t{\n\t\tvalue: 'PG',\n\t\tlabel: 'Papua New Guinea',\n\t},\n\t{\n\t\tvalue: 'PY',\n\t\tlabel: 'Paraguay',\n\t},\n\t{\n\t\tvalue: 'PE',\n\t\tlabel: 'Peru',\n\t},\n\t{\n\t\tvalue: 'PH',\n\t\tlabel: 'Philippines',\n\t},\n\t{\n\t\tvalue: 'PN',\n\t\tlabel: 'Pitcairn',\n\t},\n\t{\n\t\tvalue: 'PL',\n\t\tlabel: 'Poland',\n\t},\n\t{\n\t\tvalue: 'PT',\n\t\tlabel: 'Portugal',\n\t},\n\t{\n\t\tvalue: 'PR',\n\t\tlabel: 'Puerto Rico',\n\t},\n\t{\n\t\tvalue: 'QA',\n\t\tlabel: 'Qatar',\n\t},\n\t{\n\t\tvalue: 'RO',\n\t\tlabel: 'Romania',\n\t},\n\t{\n\t\tvalue: 'RU',\n\t\tlabel: 'Russian Federation',\n\t},\n\t{\n\t\tvalue: 'RW',\n\t\tlabel: 'Rwanda',\n\t},\n\t{\n\t\tvalue: 'RE',\n\t\tlabel: 'Réunion',\n\t},\n\t{\n\t\tvalue: 'BL',\n\t\tlabel: 'Saint Barthélemy',\n\t},\n\t{\n\t\tvalue: 'SH',\n\t\tlabel: 'Saint Helena, Ascension and Tristan da Cunha',\n\t},\n\t{\n\t\tvalue: 'KN',\n\t\tlabel: 'Saint Kitts and Nevis',\n\t},\n\t{\n\t\tvalue: 'LC',\n\t\tlabel: 'Saint Lucia',\n\t},\n\t{\n\t\tvalue: 'MF',\n\t\tlabel: 'Saint Martin (French part)',\n\t},\n\t{\n\t\tvalue: 'PM',\n\t\tlabel: 'Saint Pierre and Miquelon',\n\t},\n\t{\n\t\tvalue: 'VC',\n\t\tlabel: 'Saint Vincent and the Grenadines',\n\t},\n\t{\n\t\tvalue: 'WS',\n\t\tlabel: 'Samoa',\n\t},\n\t{\n\t\tvalue: 'SM',\n\t\tlabel: 'San Marino',\n\t},\n\t{\n\t\tvalue: 'ST',\n\t\tlabel: 'Sao Tome and Principe',\n\t},\n\t{\n\t\tvalue: 'SA',\n\t\tlabel: 'Saudi Arabia',\n\t},\n\t{\n\t\tvalue: 'SN',\n\t\tlabel: 'Senegal',\n\t},\n\t{\n\t\tvalue: 'RS',\n\t\tlabel: 'Serbia',\n\t},\n\t{\n\t\tvalue: 'SC',\n\t\tlabel: 'Seychelles',\n\t},\n\t{\n\t\tvalue: 'SL',\n\t\tlabel: 'Sierra Leone',\n\t},\n\t{\n\t\tvalue: 'SG',\n\t\tlabel: 'Singapore',\n\t},\n\t{\n\t\tvalue: 'SX',\n\t\tlabel: 'Sint Maarten (Dutch part)',\n\t},\n\t{\n\t\tvalue: 'SK',\n\t\tlabel: 'Slovakia',\n\t},\n\t{\n\t\tvalue: 'SI',\n\t\tlabel: 'Slovenia',\n\t},\n\t{\n\t\tvalue: 'SB',\n\t\tlabel: 'Solomon Islands',\n\t},\n\t{\n\t\tvalue: 'SO',\n\t\tlabel: 'Somalia',\n\t},\n\t{\n\t\tvalue: 'ZA',\n\t\tlabel: 'South Africa',\n\t},\n\t{\n\t\tvalue: 'GS',\n\t\tlabel: 'South Georgia and the South Sandwich Islands',\n\t},\n\t{\n\t\tvalue: 'SS',\n\t\tlabel: 'South Sudan',\n\t},\n\t{\n\t\tvalue: 'ES',\n\t\tlabel: 'Spain',\n\t},\n\t{\n\t\tvalue: 'LK',\n\t\tlabel: 'Sri Lanka',\n\t},\n\t{\n\t\tvalue: 'SD',\n\t\tlabel: 'Sudan',\n\t},\n\t{\n\t\tvalue: 'SR',\n\t\tlabel: 'Suriname',\n\t},\n\t{\n\t\tvalue: 'SJ',\n\t\tlabel: 'Svalbard and Jan Mayen',\n\t},\n\t{\n\t\tvalue: 'SE',\n\t\tlabel: 'Sweden',\n\t},\n\t{\n\t\tvalue: 'CH',\n\t\tlabel: 'Switzerland',\n\t},\n\t{\n\t\tvalue: 'SY',\n\t\tlabel: 'Syrian Arab Republic',\n\t},\n\t{\n\t\tvalue: 'TW',\n\t\tlabel: 'Taiwan, Province of China',\n\t},\n\t{\n\t\tvalue: 'TJ',\n\t\tlabel: 'Tajikistan',\n\t},\n\t{\n\t\tvalue: 'TZ',\n\t\tlabel: 'Tanzania, United Republic of',\n\t},\n\t{\n\t\tvalue: 'TH',\n\t\tlabel: 'Thailand',\n\t},\n\t{\n\t\tvalue: 'TL',\n\t\tlabel: 'Timor-Leste',\n\t},\n\t{\n\t\tvalue: 'TG',\n\t\tlabel: 'Togo',\n\t},\n\t{\n\t\tvalue: 'TK',\n\t\tlabel: 'Tokelau',\n\t},\n\t{\n\t\tvalue: 'TO',\n\t\tlabel: 'Tonga',\n\t},\n\t{\n\t\tvalue: 'TT',\n\t\tlabel: 'Trinidad and Tobago',\n\t},\n\t{\n\t\tvalue: 'TN',\n\t\tlabel: 'Tunisia',\n\t},\n\t{\n\t\tvalue: 'TR',\n\t\tlabel: 'Turkey',\n\t},\n\t{\n\t\tvalue: 'TM',\n\t\tlabel: 'Turkmenistan',\n\t},\n\t{\n\t\tvalue: 'TC',\n\t\tlabel: 'Turks and Caicos Islands',\n\t},\n\t{\n\t\tvalue: 'TV',\n\t\tlabel: 'Tuvalu',\n\t},\n\t{\n\t\tvalue: 'UG',\n\t\tlabel: 'Uganda',\n\t},\n\t{\n\t\tvalue: 'UA',\n\t\tlabel: 'Ukraine',\n\t},\n\t{\n\t\tvalue: 'AE',\n\t\tlabel: 'United Arab Emirates',\n\t},\n\t{\n\t\tvalue: 'GB',\n\t\tlabel: 'United Kingdom',\n\t},\n\t{\n\t\tvalue: 'UM',\n\t\tlabel: 'United States Minor Outlying Islands',\n\t},\n\t{\n\t\tvalue: 'US',\n\t\tlabel: 'United States',\n\t},\n\t{\n\t\tvalue: 'UY',\n\t\tlabel: 'Uruguay',\n\t},\n\t{\n\t\tvalue: 'UZ',\n\t\tlabel: 'Uzbekistan',\n\t},\n\t{\n\t\tvalue: 'VU',\n\t\tlabel: 'Vanuatu',\n\t},\n\t{\n\t\tvalue: 'VE',\n\t\tlabel: 'Venezuela, Bolivarian Republic of',\n\t},\n\t{\n\t\tvalue: 'VN',\n\t\tlabel: 'Viet Nam',\n\t},\n\t{\n\t\tvalue: 'VG',\n\t\tlabel: 'Virgin Islands, British',\n\t},\n\t{\n\t\tvalue: 'VI',\n\t\tlabel: 'Virgin Islands, U.S.',\n\t},\n\t{\n\t\tvalue: 'WF',\n\t\tlabel: 'Wallis and Futuna',\n\t},\n\t{\n\t\tvalue: 'EH',\n\t\tlabel: 'Western Sahara',\n\t},\n\t{\n\t\tvalue: 'YE',\n\t\tlabel: 'Yemen',\n\t},\n\t{\n\t\tvalue: 'ZM',\n\t\tlabel: 'Zambia',\n\t},\n\t{\n\t\tvalue: 'ZW',\n\t\tlabel: 'Zimbabwe',\n\t},\n];\nexport const priorityArray = [\n\t{ label: 'High', value: '100', icon: '!' },\n\t{ label: 'Medium', value: '50', icon: '' },\n\t{ label: 'Low', value: '10', icon: '' },\n];\n\nexport const computeFormula = (options, arr, arr2, items = [], item = {}, itemOnly = false) => {\n\tif (itemOnly && arr.length > 0) {\n\n\t\tlet result = 0;\n\n\t\tif (options?.operator === 'sum') {\n\n\t\t\treturn options.list.reduce((a, b) => {\n\t\t\t\tconst object = arr.find(f => f.field_name === b);\n\t\t\t\tconst value = item[object.options?.mapToItem];\n\t\t\t\tconst valueF = isJson(value) ? JSON.parse(value)[b] : value;\n\t\t\t\treturn a + +valueF;\n\t\t\t}, 0).toFixed(2);\n\n\t\t} else if (options?.operator === 'difference') {\n\n\t\t\treturn options.list.reduce((a, b, index) => {\n\t\t\t\tconst object = arr.find(f => f.field_name === b);\n\t\t\t\tconst value = item[object.options?.mapToItem];\n\t\t\t\tconst valueF = isJson(value) ? JSON.parse(value)[b] : value;\n\t\t\t\treturn index === 0 ? +valueF : a - +valueF;\n\t\t\t}, 0).toFixed(2);\n\n\t\t} else if (options?.operator === 'multiply') {\n\n\t\t\tresult = options.list.reduce((a, b) => {\n\t\t\t\tconst object = arr.find(f => f.field_name === b);\n\t\t\t\tconst value = item[object.options?.mapToItem];\n\t\t\t\tconst valueF = isJson(value) ? JSON.parse(value)[b] : value;\n\t\t\t\treturn a * +valueF;\n\t\t\t}, 1);\n\n\t\t} else if (options?.operator === 'divide') {\n\n\t\t\tresult = options.list.reduce((a, b) => {\n\t\t\t\tconst object = arr.find(f => f.field_name === b);\n\t\t\t\tconst value = item[object.options?.mapToItem];\n\t\t\t\tconst valueF = isJson(value) ? JSON.parse(value)[b] : value;\n\t\t\t\treturn +valueF / a;\n\t\t\t}, 1);\n\n\t\t}\n\n\t\treturn Number.isInteger(result) ? result : result.toFixed(2);\n\n\t} else\n\n\t\tif (options?.operator === 'sum') {\n\t\t\treturn arr.reduce((a, b) => a + parseInt(b?.value ?? 0), 0).toFixed(2);\n\t\t} else if (options?.operator === 'freesum') {\n\t\t\tlet sum = 0;\n\n\t\t\toptions.list.map(li => {\n\t\t\t\tconst value = arr2.find(ar => ar.selected_fields.find(sf => sf.field_name === li && sf.value))?.selected_fields?.find(sf => sf.field_name === li && sf.value)?.value ?? 0;\n\t\t\t\tsum = sum + +value;\n\t\t\t})\n\n\t\t\treturn sum.toFixed(2);\n\t\t} else if (options?.operator === 'difference') {\n\t\t\treturn arr.reduce((a, b) => a - parseInt(b?.value ?? 0), 0).toFixed(2);\n\t\t} else if (options?.operator === 'datesdiff') {\n\t\t\tif (arr.length == 2) {\n\t\t\t\tconst value = moment(new Date(arr[1].value), 'DD/MM/YYYY').diff(moment(new Date(arr[0].value), 'DD/MM/YYYY'), 'days');\n\t\t\t\treturn value < 0 ? '' : value;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else if (options?.operator === 'datenowdiff') {\n\t\t\tif (arr.length == 1) {\n\t\t\t\tconst value = moment(new Date(now()), 'DD/MM/YYYY').diff(moment(new Date(arr[0].value), 'DD/MM/YYYY'), 'days');\n\t\t\t\treturn value < 0 ? '' : value;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else if (options?.operator === 'countdateocc') {\n\t\t\tconst dateV = getDateForm(options?.searchtext);\n\n\t\t\treturn arr.filter(obj => obj.component_fields.filter(cf => options?.list.includes(cf.field_name) && moment(new Date(cf.value)).format('DD MMM YYYY') === moment(dateV).format('DD MMM YYYY')).length > 0).length;\n\t\t} else if (options?.operator === 'multiply') {\n\t\t\tconst result = arr.reduce((a, b) => a * +(b?.value ?? 0), 1);\n\t\t\treturn Number.isInteger(result) ? result : result.toFixed(2);\n\n\t\t} else if (options?.operator === 'divide') {\n\t\t\tconst result = arr.reduce((a, b) => a / +(b?.value ?? 0), 1);\n\t\t\treturn Number.isInteger(result) ? result : result.toFixed(2);\n\n\t\t} else if (options?.operator === 'tdiff') {\n\t\t\treturn arr2.reduce((a, b) => {\n\t\t\t\tconst found = b?.selected_fields?.find(sf => sf.field_name === options.list[0]);\n\t\t\t\tconst result = a - (found === undefined || found === '' ? 0 : +found.value);\n\t\t\t\treturn Number.isInteger(result) ? result : result.toFixed(2);\n\n\t\t\t}, 0);\n\t\t} else if (options?.operator === 'tsum') {\n\t\t\treturn arr2.reduce((a, b) => {\n\t\t\t\tconst found = b?.selected_fields?.find(sf => sf.field_name === options.list[0]) ?? 0;\n\n\t\t\t\tconst result = a + (found === '' ? 0 : +found.value);\n\t\t\t\treturn Number.isInteger(result) ? result : result.toFixed(2);\n\n\n\t\t\t}, 0);\n\t\t} else if (options?.list[0] === 'qty' && options?.operator === 'itemdiff') {\n\t\t\treturn items.reduce((a, b) => {\n\t\t\t\tconst found = (isJson(b?.quantity) ? b?.quantity : b?.quantity) ?? 0;\n\t\t\t\treturn a - parseInt(found === '' ? 0 : `${found}`);\n\t\t\t}, 0);\n\t\t} else if (options?.list[0] === 'qty' && options?.operator === 'itemsum') {\n\t\t\treturn items.reduce((a, b) => {\n\t\t\t\tconst found = b?.quantity ?? 0;\n\t\t\t\treturn a + parseInt(found === '' ? 0 : `${found}`);\n\t\t\t}, 0);\n\t\t} else if (options?.list[0] === 'total' && options?.operator === 'itemdiff') {\n\t\t\treturn items.reduce((a, b) => {\n\t\t\t\tconst found = b?.total ?? 0;\n\t\t\t\treturn a - parseInt(found === '' ? 0 : `${found}`);\n\t\t\t}, 0);\n\t\t} else if (options?.list[0] === 'total' && options?.operator === 'itemsum') {\n\t\t\treturn items.reduce((a, b) => {\n\t\t\t\tconst found = b?.total ?? 0;\n\t\t\t\treturn a + parseInt(found === '' ? 0 : `${found}`);\n\t\t\t}, 0);\n\t\t} else if (options?.list[0] === 'value' && options?.operator === 'itemsum') {\n\t\t\treturn items.reduce((a, b) => {\n\t\t\t\tconst found = b?.value ?? 0;\n\t\t\t\treturn a + parseInt(found === '' ? 0 : `${found}`);\n\t\t\t}, 0);\n\t\t} else if (options?.list[0] === 'value' && options?.operator === 'itemdiff') {\n\t\t\treturn items.reduce((a, b) => {\n\t\t\t\tconst found = b?.value ?? 0;\n\t\t\t\treturn a - parseInt(found === '' ? 0 : `${found}`);\n\t\t\t}, 0);\n\t\t} else if (options?.list[0] === 'altvalue' && options?.operator === 'itemsum') {\n\t\t\treturn items.reduce((a, b) => {\n\t\t\t\tconst found = b?.alt_value ?? 0;\n\t\t\t\treturn a + parseInt(found === '' ? 0 : `${found}`);\n\t\t\t}, 0);\n\t\t} else if (options?.list[0] === 'altvalue' && options?.operator === 'itemdiff') {\n\t\t\treturn items.reduce((a, b) => {\n\t\t\t\tconst found = b?.alt_value ?? 0;\n\t\t\t\treturn a - parseInt(found === '' ? 0 : `${found}`);\n\t\t\t}, 0);\n\t\t} else if (options?.operator === 'countocc') {\n\t\t\treturn arr.filter(obj => obj.component_fields?.filter(cf => options?.list.includes(cf.field_name) && cf.value === options?.searchtext).length > 0).length;\n\t\t} else if (options?.operator === 'cmpdistance') {\n\t\t\tconst arrA = R.flatten(arr2.map(a => {\n\t\t\t\treturn a.selected_fields;\n\t\t\t})).filter(cf => cf?.value && options?.list.includes(cf.field_name));\n\n\t\t\treturn arrA\n\t\t\t\t.reduce((a, b) => {\n\t\t\t\t\tconst i = arrA.findIndex(fi => fi.id === b.id);\n\t\t\t\t\tif (i == 0) {\n\t\t\t\t\t\treturn a;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst loc1 = JSON.parse(arrA[i].value);\n\t\t\t\t\t\tconst loc2 = JSON.parse(arrA[i - 1].value);\n\t\t\t\t\t\treturn a + getDistanceBetweenPoints(loc1.source.lat, loc1.source.lng, loc2.source.lat, loc2.source.lng)\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t}\n\treturn 0;\n};\n\nexport const getDateForm = type => {\n\tif (type === 'today') {\n\t\treturn new Date(moment(now()));\n\t} else if (type === 'tomorrow') {\n\t\treturn new Date(moment(now()).add(1, 'days'));\n\t} else if (type === 'week') {\n\t\treturn new Date(moment(now()).add(1, 'weeks'));\n\t} else if (type === 'month') {\n\t\treturn new Date(moment(now()).add(1, 'months'));\n\t}\n\treturn new Date(moment(now()));\n};\n\nexport const clientData = {\n\tclientName: 'BMW',\n\tProduct: 'Bike',\n\tvalueChain: {\n\t\t'BMW Smart Car': {\n\t\t\tcost: 9776,\n\t\t\tlabel: 'BMW Smart Car',\n\t\t\tchildOf: null,\n\t\t\tcurrency: 'USD',\n\t\t\temission: '72 tCO2',\n\t\t},\n\t\telit: {\n\t\t\tcost: 6955,\n\t\t\tlabel: 'elit',\n\t\t\tchildOf: 'BMW Smart Car',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '85 tCO2',\n\t\t},\n\n\t\tsunt: {\n\t\t\tcost: 6624,\n\t\t\tlabel: 'sunt',\n\t\t\tchildOf: 'adipisicing',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '74 tCO2',\n\t\t},\n\t\tnisi: {\n\t\t\tcost: 5103,\n\t\t\tlabel: 'nisi',\n\t\t\tchildOf: 'sunt',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '93 tCO2',\n\t\t},\n\t\tquis: {\n\t\t\tcost: 5629,\n\t\t\tlabel: 'quis',\n\t\t\tchildOf: 'sunt',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '76 tCO2',\n\t\t},\n\t\tadipisicing: {\n\t\t\tcost: 7815,\n\t\t\tlabel: 'adipisicing',\n\t\t\tchildOf: 'aliqua',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '32 tCO2',\n\t\t},\n\t\taliqua: {\n\t\t\tcost: 3717,\n\t\t\tlabel: 'aliqua',\n\t\t\tchildOf: 'ullamco',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '81 tCO2',\n\t\t},\n\t\tullamco: {\n\t\t\tcost: 2691,\n\t\t\tlabel: 'ullamco',\n\t\t\tchildOf: 'labore',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '78 tCO2',\n\t\t},\n\n\t\tlabore: {\n\t\t\tcost: 5493,\n\t\t\tlabel: 'labore',\n\t\t\tchildOf: 'dolore',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '75 tCO2',\n\t\t},\n\t\tdolore: {\n\t\t\tcost: 6632,\n\t\t\tlabel: 'dolore',\n\t\t\tchildOf: 'quis',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '5 tCO2',\n\t\t},\n\n\t\tanim: {\n\t\t\tcost: 7576,\n\t\t\tlabel: 'anim',\n\t\t\tchildOf: 'ullamco',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '66 tCO2',\n\t\t},\n\n\t\tdolor: {\n\t\t\tcost: 1862,\n\t\t\tlabel: 'dolor',\n\t\t\tchildOf: 'dolor',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '50 tCO2',\n\t\t},\n\t\tipsum: {\n\t\t\tcost: 8805,\n\t\t\tlabel: 'ipsum',\n\t\t\tchildOf: 'labore',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '72 tCO2',\n\t\t},\n\t\tnulla: {\n\t\t\tcost: 1368,\n\t\t\tlabel: 'nulla',\n\t\t\tchildOf: 'nulla',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '7 tCO2',\n\t\t},\n\n\t\tcillum: {\n\t\t\tcost: 3723,\n\t\t\tlabel: 'cillum',\n\t\t\tchildOf: 'cillum',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '96 tCO2',\n\t\t},\n\n\t\tproident: {\n\t\t\tcost: 832,\n\t\t\tlabel: 'proident',\n\t\t\tchildOf: 'cillum',\n\t\t\tcurrency: 'USD',\n\t\t\temission: '89 tCO2',\n\t\t},\n\t},\n};\n\nexport const operatorArray = [\n\t{ label: 'Sum of the fields (Number Field+B)', id: 0, value: 'sum', type: 'fields' },\n\t{ label: 'Difference between fields (B-Number Field)', id: 1, value: 'difference', type: 'fields' },\n\t{ label: 'Replace with new value (with B-Number Field)', id: 3, value: 'replace', type: 'fields' },\n\t{ label: 'Read only (Display value only)', id: 4, value: 'display', type: 'fields' },\n];\nexport const itemArray = [\n\t{ label: 'Quantity', value: 'quantity' },\n\t// {label: 'Alt Value', value: 'alt_value'},\n\t// {label: 'Total', value: 'total'},\n];\n\nexport const actionsArray = [\n\t{ label: 'Save current user', value: 'user' },\n\t{ label: 'Save user that created', value: 'creator' },\n\t{ label: 'Save selected status', value: 'status' },\n\t{ label: 'Save current date', value: 'date' },\n\t{ label: 'Save current location', value: 'location' },\n];\n\nexport const customStyles = {\n\tcontrol: (provided, _state) => ({\n\t\t...provided,\n\t\tboxShadow: 'none',\n\t\t'&:hover': {\n\t\t\tborder: '1px solid var(--app-color-gray-lighter)',\n\t\t},\n\t\tposition: 'relative',\n\t\theight: '60px',\n\t\twidth: '100%',\n\t\tborder: 'var(--app-color-gray-lighter) solid 1px',\n\t\tpadding: '3px',\n\t\tfontFamily: 'var(--app-text-main-font)',\n\t\tfontSize: '16px',\n\t\tfontWeight: '700',\n\t\tcolor: '#4A4A4A',\n\t\ttextAlign: 'left',\n\t\tflex: '1 1 auto',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\talignContent: 'center',\n\t\talignSelf: 'center',\n\t}),\n\tinput: (provided, _state) => ({\n\t\t...provided,\n\t\tfontFamily: 'var(--app-text-main-font)',\n\t\tcolor: '#4A4A4A',\n\t\twidth: '100%',\n\t\ttextAlign: 'left',\n\t\tfontSize: '16px',\n\t\tfontWeight: '700',\n\t\talignSelf: 'center',\n\t}),\n\tmenu: (provided, _state) => ({\n\t\t...provided,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tverticalTextAlign: 'center',\n\t\talignContent: 'center',\n\t}),\n\tmenulist: (provided, _state) => ({\n\t\t...provided,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tverticalTextAlign: 'center',\n\t\talignContent: 'center',\n\t\tfontFamily: 'var(--app-text-main-font)',\n\t\tfontSize: '16px',\n\t}),\n\toption: (provided, _state) => ({\n\t\t...provided,\n\t\tminHeight: 15,\n\t\tpaddingTop: 0,\n\t\tfontSize: '16px',\n\t\tcolor: 'black',\n\t\tverticalTextAlign: 'center',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\talignContent: 'center',\n\t\tfontFamily: 'var(--app-text-main-font)',\n\t\tfontWeight: 'bold'\n\t}),\n\tplaceholder: (provided, _state) => ({\n\t\t...provided,\n\t\tfontSize: '16px',\n\t\tlineHeight: '20px',\n\t\tcolor: '#4A4A4A',\n\t\tfontWeight: 400,\n\t\toverflow: 'hidden',\n\t\tfontFamily: 'var(--app-text-main-font)',\n\t}),\n\tsingleValue: (provided, state) => {\n\t\tconst opacity = state.isDisabled ? 0.5 : 1;\n\t\tconst transition = 'opacity 300ms';\n\t\treturn {\n\t\t\t...provided,\n\t\t\topacity,\n\t\t\ttransition,\n\t\t\tmarginLeft: '0px',\n\t\t\tfontSize: '16px',\n\t\t\tlineHeight: '20px',\n\t\t\tcolor: '#4A4A4A',\n\t\t\tfontFamily: 'var(--app-text-main-font)',\n\t\t};\n\t},\n\tindicatorsContainer: (styles, { _data }) => ({\n\t\t...styles,\n\t\tmarginTop: 'auto',\n\t\tmarginBottom: 'auto',\n\t\tcolor: '#4A4A4A',\n\t\tsize: 7,\n\t\t':hover': { color: 'gray' },\n\t\twidth: '65px',\n\t\theight: '45px',\n\t}),\n};\n/**\n * Converts degrees to radians.\n *\n * @param degrees Number of degrees.\n */\nfunction degreesToRadians(degrees) {\n\treturn (degrees * Math.PI) / 180;\n}\n\n/**\n * Returns the distance between 2 points of coordinates in Google Maps\n *\n * @see https://stackoverflow.com/a/1502821/4241030\n * @param lat1 Latitude of the point A\n * @param lng1 Longitude of the point A\n * @param lat2 Latitude of the point B\n * @param lng2 Longitude of the point B\n */\nexport function getDistanceBetweenPoints(lat1, lng1, lat2, lng2) {\n\t// The radius of the planet earth in meters\n\tlet R = 6378137;\n\tlet dLat = degreesToRadians(lat2 - lat1);\n\tlet dLong = degreesToRadians(lng2 - lng1);\n\tlet a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(degreesToRadians(lat1)) * Math.cos(degreesToRadians(lat1)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);\n\n\tlet c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\tlet distance = (R * c) / 1000;\n\n\treturn distance < 1 ? 1 : distance;\n}\nexport function isUserAuthorized(status, authorized, selectedComponent, usr = { id: '', positions: [] }, begunModule, companyData) {\n\n\tif (!usr?.positions)\n\t\treturn false;\n\n\treturn (\n\t\t(((status === undefined || status === null) && authorized?.filter(a => (usr?.positions ?? []).map(pos => pos.id).indexOf(a) > -1).length > 0) ||\n\t\t\t(status !== undefined &&\n\t\t\t\t!(status === 'Hide' || status === 'Closed' || status === companyData?.misc_info?.lock || status === 'Cancelled') &&\n\t\t\t\tauthorized?.filter(a => usr.positions.map(pos => pos.id).indexOf(a) > -1).length > 0 &&\n\t\t\t\t(begunModule?.processModule?.module?.options?.strict != true || selectedComponent?.created_by?.id !== usr?.id))) &&\n\t\tselectedComponent.created_by?.id !== usr?.id\n\t);\n}\n\nexport const groupings = group => {\n\tconst found = (group ?? '').slice(0, 1);\n\tif (found >= 'A' && found <= 'D') return 'Components [A-D]';\n\telse if (found >= 'E' && found <= 'K') return 'Components [E-K]';\n\telse if (found >= 'L' && found <= 'O') return 'Components [L-O]';\n\telse if (found >= 'P' && found <= 'T') return 'Components [P-T]';\n\treturn 'Components [U-Z]';\n};\n\nexport function roomUrlFromPageUrl() {\n\tconst match = window.location.search.match(/roomUrl=([^&]+)/i);\n\treturn match && match[1] ? decodeURIComponent(match[1]) : null;\n}\n\nexport function pageUrlFromRoomUrl(roomUrl) {\n\treturn (\n\t\twindow.location.href.split('?')[0] + (roomUrl ? `?roomUrl=${encodeURIComponent(roomUrl)}` : '')\n\t);\n}\n\nexport function Chevron(props) {\n\treturn (\n\t\t<svg className={props.className} width={props?.width ?? '14'} height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M1 1L7 7L13 1\" stroke=\"#333333\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n\t\t</svg>\n\t);\n}\n\nexport const FLOWHERO = (size = '20px', color = 'var(--app-color-gray-dark)', weight = 'normal') => (\n\t<div className=\"headerTopBarContainer\" style={{ fontSize: size, fontWeight: weight, color: color }}>\n\t\tFLOW<span style={{ color: 'orange', fontWeight: weight }}> HERO</span>™\n\t</div>\n);\n\nexport const FLOWHEROAPPS = (size = '20px', color = 'var(--app-color-gray-dark)', weight = 'normal') => (\n\t<div className=\"headerTopBarContainerII\" style={{ fontSize: size, fontWeight: weight, color: color, flexDirection: isMobile ? 'column' : 'column' }}>\n\t\t<div style={{ marginRight: '6px' }}>FLOW<span style={{ color: 'orange', fontWeight: weight }}>HERO</span>APPS</div><div style={{ fontSize: '10px', fontWeight: weight, letterSpacing: isMobile ? '8px' : '12px' }}>{'SOLUTIONS'}</div>\n\t</div>\n);\n\nexport const BYFLOWHERO = (size = '20px') => (\n\t<div className=\"headerTopBarContainer\" style={{ fontSize: size }}>\n\t\tBY FLOW<span style={{ color: 'orange', fontWeight: 'normal' }}> HERO</span>™\n\t</div>\n);\n\nexport const APP_NAME = 'FlowHero™';\nexport const COMPANY_NAME = `FlowHeroApps Solutions OPC`;\nexport const PROMO_VIDEO = 'https://youtu.be/MP8uunWIfps';\nexport const WHAT_ARE_WORKFLOWS = 'https://www.youtube.com/watch?v=xV-bOHvfbPQ';\n\nexport const APPEND_TO_DATA = 0;\nexport const CLEAR_TO_SET_DATA = 1;\nexport const LIST_ONLY = true;\nexport const FORCED = true;\nexport const page_default = 10;\nexport const dashboard_page_default = 5;\nexport const pagination = 10;\nexport const no_pagination = 0;\nexport const pagination_max = 10;\nexport const app_max = 10000;\nexport const chart_config = {\n\tchart: {\n\t\tfontFamily: 'var(--app-text-main-font)',\n\t\ttype: 'donut',\n\t},\n\tcolors: ['#3C50E0', '#0FADCF', '#6577F3', '#8FD0EF'],\n\tlegend: {\n\t\tshow: true,\n\t\tposition: 'bottom',\n\t},\n\n\tplotOptions: {\n\t\tpie: {\n\t\t\tdonut: {\n\t\t\t\tbackground: 'transparent',\n\t\t\t\tlabels: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tname: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tfontSize: '22px',\n\t\t\t\t\t\tfontFamily: 'var(--app-text-main-font)',\n\t\t\t\t\t\tcolor: undefined,\n\t\t\t\t\t\toffsetY: -10,\n\t\t\t\t\t\tformatter: function (val) {\n\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t\tfontFamily: 'var(--app-text-main-font)',\n\t\t\t\t\t\tfontWeight: 'normal',\n\t\t\t\t\t\tcolor: undefined,\n\t\t\t\t\t\toffsetY: 16,\n\t\t\t\t\t\tformatter: function (val) {\n\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttotal: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tshowAlways: true,\n\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\tfontSize: '22px',\n\t\t\t\t\t\tfontFamily: 'var(--app-text-main-font)',\n\t\t\t\t\t\tfontWeight: 600,\n\t\t\t\t\t\tcolor: '#373d3f',\n\t\t\t\t\t\tformatter: function (w) {\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\n\t\t\t\t\t\t\t\treturn a + b\n\t\t\t\t\t\t\t}, 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n\tdataLabels: {\n\t\tenabled: true,\n\t},\n\tresponsive: [\n\t\t{\n\t\t\tbreakpoint: 2600,\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\twidth: 380,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tbreakpoint: 640,\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\twidth: 200,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n};\nexport const isJson = (str) => {\n\n\ttry {\n\t\tJSON.parse(str);\n\t} catch (e) {\n\t\treturn false;\n\t}\n\n\treturn (`${str}`)?.includes('{');\n}\n\nexport const modulesQ = {\n\ttoolbar: [\n\t\t[{ header: 1 }, { header: 2 }, { header: 3 }],\n\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t[{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n\t\t['link', 'image'],\n\t\t['clean']\n\t],\n};\nexport const modulesQ2 = {\n\tclipboard: {\n\t\tmatchers: [\n\t\t\t//   ['B', customMatcherA],\n\t\t\t//   [Node.TEXT_NODE, customMatcherB]\n\t\t]\n\t},\n\ttoolbar: [\n\t\t['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n\t\t['blockquote', 'code-block'],\n\t\t['link', 'image', 'video', 'formula'],\n\t\t[{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\t\t[{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'list': 'check' }],\n\t\t[{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n\t\t\n\t]\n};\n\nexport const formatsQ = [\n\t'header', 'font',\n\t'bold', 'italic', 'underline', 'strike', 'blockquote',\n\t'list', 'bullet', 'indent',\n\t'link', 'image'\n];\n\nexport const statusArray = [\n\t{ label: 'New', value: 'New', type: 'Basic', color: 'green' },\n\t{ label: 'Ongoing', value: 'Ongoing', type: 'Basic', color: '#FFAA01' },\n\t{ label: 'Pending', value: 'Pending', type: 'Basic', color: 'black' },\n\t{ label: 'Not Started', value: 'Not Started', type: 'Basic', color: 'black' },\n\t{ label: 'On the Way', value: 'On the way', type: 'Basic', color: 'blue' },\n\t{ label: 'Awaiting Payment', value: 'Awaiting Payment', type: 'Basic', color: 'purple' },\n\t{ label: 'Awaiting Fulfillment', value: 'Awaiting Fulfillment', type: 'Basic', color: 'purple' },\n\t{ label: 'Awaiting Shipment', value: 'Awaiting Shipment', type: 'Basic', color: 'maroon' },\n\t{ label: 'Awaiting Pickup', value: 'Awaiting Pickup', type: 'Basic', color: 'gray' },\n\t{ label: 'Partially Shipped', value: 'Partially Shipped', type: 'Basic', color: 'blue' },\n\t{ label: 'Completed', value: 'Completed', type: 'Basic', color: 'darkblue' },\n\t{ label: 'Shipped', value: 'Shipped', type: 'Basic', color: 'darkblue' },\n\t{ label: 'Cancelled', value: 'Cancelled', type: 'Basic', color: 'red' },\n\t{ label: 'Declined', value: 'Declined', type: 'Basic', color: 'red' },\n\t{ label: 'Expired', value: 'Expired', type: 'Basic', color: 'red' },\n\t{ label: 'Refunded', value: 'Refunded', type: 'Basic', color: 'darkblue' },\n\t{ label: 'Disputed', value: 'Disputed', type: 'Basic', color: 'black' },\n\t{ label: 'Approved', value: 'Approved', type: 'Basic', color: 'darkblue' },\n\t{ label: 'Accepted', value: 'Accepted', type: 'Basic', color: '#FFAA01' },\n\t{ label: 'Done', value: 'Done', type: 'Basic', color: 'darkblue' },\n\t{ label: 'Closed (Will lock Edit)', value: 'Closed', type: 'Basic', color: 'red' },\n];\n\nexport const randomColor = '#' + (Math.random().toString(16) + \"000000\").substring(2,8);"],"names":["FLOWHEROAPPS","size","arguments","length","undefined","color","weight","React","className","style","fontSize","fontWeight","flexDirection","isMobile","marginRight","letterSpacing","APP_NAME","COMPANY_NAME","Math","random","toString","substring"],"sourceRoot":""}